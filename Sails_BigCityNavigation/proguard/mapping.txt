android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.a:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> a
    android.app.Activity mActivity -> b
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> c
    android.support.v4.widget.DrawerLayout mDrawerLayout -> d
    boolean mDrawerIndicatorEnabled -> e
    android.graphics.drawable.Drawable mThemeImage -> f
    android.graphics.drawable.Drawable mDrawerImage -> g
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> h
    int mDrawerImageResource -> i
    int mOpenDrawerContentDescRes -> j
    int mCloseDrawerContentDescRes -> k
    java.lang.Object mSetIndicatorInfo -> l
    void syncState() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator() -> b
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> b
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.b:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.c:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.d:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.e:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.f:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> a
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> a
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.g:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> a
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.h:
    android.graphics.drawable.Drawable mWrapped -> a
    float mOffset -> b
    float mOffsetBy -> c
    android.graphics.Rect mTmpRect -> d
    void setOffset(float) -> a
    float getOffset() -> a
    void setOffsetBy(float) -> b
    void draw(android.graphics.Canvas) -> draw
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void clearColorFilter() -> clearColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    boolean onStateChange(int[]) -> onStateChange
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.i:
    int[] THEME_ATTRS -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.j:
    java.lang.reflect.Method setHomeAsUpIndicator -> a
    java.lang.reflect.Method setHomeActionContentDescription -> b
    android.widget.ImageView upIndicatorView -> c
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.k:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.l:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.m:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.n:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.o:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.p:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.q:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.r:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.s:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.t:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.u:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.w:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.x:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.y:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.z:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.aa:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.ab:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.ac:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.ad:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.ae:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.af:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.ag:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.ah:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.ai:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.aj:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ak:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.al:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.am:
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.an:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.ao:
    java.lang.CharSequence mBigText -> a
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.ap:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mUseChronometer -> k
    android.support.v4.app.NotificationCompat$Style mStyle -> l
    java.lang.CharSequence mSubText -> m
    int mProgressMax -> n
    int mProgress -> o
    boolean mProgressIndeterminate -> p
    java.util.ArrayList mActions -> q
    android.app.Notification mNotification -> r
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> c
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> a
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> a
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> b
    void setFlag(int,boolean) -> a
    android.app.Notification build() -> a
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.aq:
    java.util.ArrayList mTexts -> a
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.ar:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.as:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.at:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.au:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.av:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.aw:
    java.lang.CharSequence mBigContentTitle -> d
    java.lang.CharSequence mSummaryText -> e
    boolean mSummaryTextSet -> f
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.ax:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.ay:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> a
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.az:
    android.app.Notification$Builder b -> a
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> a
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> a
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    android.app.Notification build() -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ba:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.LruCache -> android.support.v4.c.c:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    void trimToSize(int) -> a
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object create(java.lang.Object) -> b
    int safeSizeOf(java.lang.Object,java.lang.Object) -> c
    int sizeOf(java.lang.Object,java.lang.Object) -> b
    int size() -> a
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.d:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.n:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.q:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.r:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.s:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.t:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.u:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.v:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.w:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.x:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.y:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.z:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.aa:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ab:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.ac:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.ad:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.ae:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.af:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ag:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ah:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ai:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.aj:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ak:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.al:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.am:
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.an:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ao:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ap:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.aq:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ar:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.as:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.at:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.au:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.av:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aw:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ax:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
    android.view.ViewParent getParentForAccessibility(android.view.View) -> c
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ay:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.az:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ba:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.bb:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bc:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.bd:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.be:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.bf:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.bg:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.bh:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.bi:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.bj:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> h
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bk:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.bl:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.bm:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.bn:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bo:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.bp:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.bq:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.br:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bs:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bt:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bu:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bv:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.bw:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isCheckable() -> c
    boolean isChecked() -> d
    boolean isFocusable() -> e
    void setFocusable(boolean) -> a
    boolean isFocused() -> f
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> g
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> h
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> i
    void setSelected(boolean) -> e
    boolean isClickable() -> j
    void setClickable(boolean) -> f
    boolean isLongClickable() -> k
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> l
    void setEnabled(boolean) -> h
    boolean isPassword() -> m
    boolean isScrollable() -> n
    void setScrollable(boolean) -> i
    java.lang.CharSequence getPackageName() -> o
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> p
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getText() -> q
    java.lang.CharSequence getContentDescription() -> r
    void setContentDescription(java.lang.CharSequence) -> c
    void recycle() -> s
    java.lang.String getViewIdResourceName() -> t
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isFocusable(java.lang.Object) -> k
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> l
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> r
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> s
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    boolean isSelected(java.lang.Object) -> p
    void setSelected(java.lang.Object,boolean) -> g
    boolean isClickable(java.lang.Object) -> i
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> m
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> j
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    void setScrollable(java.lang.Object,boolean) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> f
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
    boolean isVisibleToUser(java.lang.Object) -> r
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> s
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.e:
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.f:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isVisibleToUser(java.lang.Object) -> r
    boolean isAccessibilityFocused(java.lang.Object) -> s
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setVisibleToUser(java.lang.Object,boolean) -> h
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.g:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.a.h:
    boolean isVisibleToUser(java.lang.Object) -> a
    void setVisibleToUser(java.lang.Object,boolean) -> a
    boolean isAccessibilityFocused(java.lang.Object) -> b
    void setAccesibilityFocused(java.lang.Object,boolean) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.a.i:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.j:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.k:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.m:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.n:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.o:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.p:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.q:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.r:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.s:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.t:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.u:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.v:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.w:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.x:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> a
    void setDrawerShadow(int,int) -> a
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> b
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewGravity(android.view.View) -> e
    boolean checkDrawerViewGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> l
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void openDrawer(int) -> c
    void closeDrawer(android.view.View) -> i
    void closeDrawer(int) -> d
    boolean isDrawerOpen(android.view.View) -> j
    boolean isDrawerOpen(int) -> e
    boolean isDrawerVisible(android.view.View) -> k
    boolean isDrawerVisible(int) -> f
    boolean hasPeekingDrawer() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> f
    android.view.View findVisibleDrawer() -> g
    void cancelChildViewTouch() -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> d
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.a:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.b:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.c:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.d:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.e:
    int mGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    void peekDrawer() -> c
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.f:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.g:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.h:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.i:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.j:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.k:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.l:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.m:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.n:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.o:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.p:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.q:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.r:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.s:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.t:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.u:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.v:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.w:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.y:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.z:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.aa:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> a
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> b
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ab:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ac:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ad:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.android.volley.AuthFailureError -> com.a.a.a:
    android.content.Intent mResolutionIntent -> b
    java.lang.String getMessage() -> getMessage
com.android.volley.Cache -> com.a.a.b:
    com.android.volley.Cache$Entry get(java.lang.String) -> a
    void put(java.lang.String,com.android.volley.Cache$Entry) -> a
    void initialize() -> a
com.android.volley.Cache$Entry -> com.a.a.c:
    byte[] data -> a
    java.lang.String etag -> b
    long serverDate -> c
    long ttl -> d
    long softTtl -> e
    java.util.Map responseHeaders -> f
    boolean isExpired() -> a
    boolean refreshNeeded() -> b
com.android.volley.CacheDispatcher -> com.a.a.d:
    boolean DEBUG -> a
    java.util.concurrent.BlockingQueue mCacheQueue -> b
    java.util.concurrent.BlockingQueue mNetworkQueue -> c
    com.android.volley.Cache mCache -> d
    com.android.volley.ResponseDelivery mDelivery -> e
    boolean mQuit -> f
    void quit() -> a
    void run() -> run
    java.util.concurrent.BlockingQueue access$0(com.android.volley.CacheDispatcher) -> a
com.android.volley.CacheDispatcher$1 -> com.a.a.e:
    com.android.volley.CacheDispatcher this$0 -> a
    com.android.volley.Request val$request -> b
    void run() -> run
com.android.volley.DefaultRetryPolicy -> com.a.a.f:
    int mCurrentTimeoutMs -> a
    int mCurrentRetryCount -> b
    int mMaxNumRetries -> c
    float mBackoffMultiplier -> d
    int getCurrentTimeout() -> a
    int getCurrentRetryCount() -> b
    void retry(com.android.volley.VolleyError) -> a
    boolean hasAttemptRemaining() -> c
com.android.volley.ExecutorDelivery -> com.a.a.g:
    java.util.concurrent.Executor mResponsePoster -> a
    void postResponse(com.android.volley.Request,com.android.volley.Response) -> a
    void postResponse(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable) -> a
    void postError(com.android.volley.Request,com.android.volley.VolleyError) -> a
com.android.volley.ExecutorDelivery$1 -> com.a.a.h:
    com.android.volley.ExecutorDelivery this$0 -> a
    android.os.Handler val$handler -> b
    void execute(java.lang.Runnable) -> execute
com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable -> com.a.a.i:
    com.android.volley.Request mRequest -> b
    com.android.volley.Response mResponse -> c
    java.lang.Runnable mRunnable -> d
    com.android.volley.ExecutorDelivery this$0 -> a
    void run() -> run
com.android.volley.Network -> com.a.a.j:
    com.android.volley.NetworkResponse performRequest(com.android.volley.Request) -> a
com.android.volley.NetworkDispatcher -> com.a.a.k:
    java.util.concurrent.BlockingQueue mQueue -> a
    com.android.volley.Network mNetwork -> b
    com.android.volley.Cache mCache -> c
    com.android.volley.ResponseDelivery mDelivery -> d
    boolean mQuit -> e
    void quit() -> a
    void addTrafficStatsTag(com.android.volley.Request) -> a
    void run() -> run
    void parseAndDeliverNetworkError(com.android.volley.Request,com.android.volley.VolleyError) -> a
com.android.volley.NetworkError -> com.a.a.l:
com.android.volley.NetworkResponse -> com.a.a.m:
    int statusCode -> a
    byte[] data -> b
    java.util.Map headers -> c
    boolean notModified -> d
com.android.volley.NoConnectionError -> com.a.a.n:
com.android.volley.ParseError -> com.a.a.o:
com.android.volley.Request -> com.a.a.p:
    com.android.volley.VolleyLog$MarkerLog mEventLog -> a
    int mMethod -> b
    java.lang.String mUrl -> c
    int mDefaultTrafficStatsTag -> d
    com.android.volley.Response$ErrorListener mErrorListener -> e
    java.lang.Integer mSequence -> f
    com.android.volley.RequestQueue mRequestQueue -> g
    boolean mShouldCache -> h
    boolean mCanceled -> i
    boolean mResponseDelivered -> j
    long mRequestBirthTime -> k
    com.android.volley.RetryPolicy mRetryPolicy -> l
    com.android.volley.Cache$Entry mCacheEntry -> m
    java.lang.Object mTag -> n
    int getMethod() -> a
    com.android.volley.Request setTag(java.lang.Object) -> a
    int getTrafficStatsTag() -> b
    int findDefaultTrafficStatsTag(java.lang.String) -> c
    com.android.volley.Request setRetryPolicy(com.android.volley.RetryPolicy) -> a
    void addMarker(java.lang.String) -> a
    void finish(java.lang.String) -> b
    com.android.volley.Request setRequestQueue(com.android.volley.RequestQueue) -> a
    com.android.volley.Request setSequence(int) -> a
    java.lang.String getUrl() -> c
    java.lang.String getCacheKey() -> d
    com.android.volley.Request setCacheEntry(com.android.volley.Cache$Entry) -> a
    com.android.volley.Cache$Entry getCacheEntry() -> e
    boolean isCanceled() -> f
    java.util.Map getHeaders() -> g
    java.util.Map getPostParams() -> h
    java.lang.String getPostParamsEncoding() -> i
    java.lang.String getPostBodyContentType() -> j
    byte[] getPostBody() -> k
    java.util.Map getParams() -> l
    java.lang.String getParamsEncoding() -> m
    java.lang.String getBodyContentType() -> n
    byte[] getBody() -> o
    byte[] encodeParameters(java.util.Map,java.lang.String) -> a
    boolean shouldCache() -> p
    com.android.volley.Request$Priority getPriority() -> q
    int getTimeoutMs() -> r
    com.android.volley.RetryPolicy getRetryPolicy() -> s
    void markDelivered() -> t
    boolean hasHadResponseDelivered() -> u
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> a
    com.android.volley.VolleyError parseNetworkError(com.android.volley.VolleyError) -> a
    void deliverResponse(java.lang.Object) -> b
    void deliverError(com.android.volley.VolleyError) -> b
    int compareTo(com.android.volley.Request) -> a
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    com.android.volley.VolleyLog$MarkerLog access$1(com.android.volley.Request) -> b
com.android.volley.Request$1 -> com.a.a.q:
    com.android.volley.Request this$0 -> a
    java.lang.String val$tag -> b
    long val$threadId -> c
    void run() -> run
com.android.volley.Request$Priority -> com.a.a.r:
    com.android.volley.Request$Priority LOW -> a
    com.android.volley.Request$Priority NORMAL -> b
    com.android.volley.Request$Priority HIGH -> c
    com.android.volley.Request$Priority IMMEDIATE -> d
    com.android.volley.Request$Priority[] ENUM$VALUES -> e
    com.android.volley.Request$Priority[] values() -> values
    com.android.volley.Request$Priority valueOf(java.lang.String) -> valueOf
com.android.volley.RequestQueue -> com.a.a.s:
    java.util.concurrent.atomic.AtomicInteger mSequenceGenerator -> a
    java.util.Map mWaitingRequests -> b
    java.util.Set mCurrentRequests -> c
    java.util.concurrent.PriorityBlockingQueue mCacheQueue -> d
    java.util.concurrent.PriorityBlockingQueue mNetworkQueue -> e
    com.android.volley.Cache mCache -> f
    com.android.volley.Network mNetwork -> g
    com.android.volley.ResponseDelivery mDelivery -> h
    com.android.volley.NetworkDispatcher[] mDispatchers -> i
    com.android.volley.CacheDispatcher mCacheDispatcher -> j
    void start() -> a
    void stop() -> b
    int getSequenceNumber() -> c
    com.android.volley.Request add(com.android.volley.Request) -> a
    void finish(com.android.volley.Request) -> b
com.android.volley.Response -> com.a.a.t:
    java.lang.Object result -> a
    com.android.volley.Cache$Entry cacheEntry -> b
    com.android.volley.VolleyError error -> c
    boolean intermediate -> d
    com.android.volley.Response success(java.lang.Object,com.android.volley.Cache$Entry) -> a
    com.android.volley.Response error(com.android.volley.VolleyError) -> a
    boolean isSuccess() -> a
com.android.volley.Response$ErrorListener -> com.a.a.u:
    void onErrorResponse(com.android.volley.VolleyError) -> a
com.android.volley.Response$Listener -> com.a.a.v:
    void onResponse(java.lang.Object) -> a
com.android.volley.ResponseDelivery -> com.a.a.w:
    void postResponse(com.android.volley.Request,com.android.volley.Response) -> a
    void postResponse(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable) -> a
    void postError(com.android.volley.Request,com.android.volley.VolleyError) -> a
com.android.volley.RetryPolicy -> com.a.a.x:
    int getCurrentTimeout() -> a
    int getCurrentRetryCount() -> b
    void retry(com.android.volley.VolleyError) -> a
com.android.volley.ServerError -> com.a.a.y:
com.android.volley.TimeoutError -> com.a.a.z:
com.android.volley.VolleyError -> com.a.a.aa:
    com.android.volley.NetworkResponse networkResponse -> a
com.android.volley.VolleyLog -> com.a.a.ab:
    java.lang.String TAG -> a
    boolean DEBUG -> b
    void v(java.lang.String,java.lang.Object[]) -> a
    void d(java.lang.String,java.lang.Object[]) -> b
    void e(java.lang.String,java.lang.Object[]) -> c
    void e(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> a
    java.lang.String buildMessage(java.lang.String,java.lang.Object[]) -> d
com.android.volley.VolleyLog$MarkerLog -> com.a.a.ac:
    boolean ENABLED -> a
    java.util.List mMarkers -> b
    boolean mFinished -> c
    void add(java.lang.String,long) -> a
    void finish(java.lang.String) -> a
    void finalize() -> finalize
    long getTotalDuration() -> a
com.android.volley.VolleyLog$MarkerLog$Marker -> com.a.a.ad:
    java.lang.String name -> a
    long thread -> b
    long time -> c
com.android.volley.toolbox.BasicNetwork -> com.a.a.a.a:
    boolean DEBUG -> a
    int SLOW_REQUEST_THRESHOLD_MS -> d
    int DEFAULT_POOL_SIZE -> e
    com.android.volley.toolbox.HttpStack mHttpStack -> b
    com.android.volley.toolbox.ByteArrayPool mPool -> c
    com.android.volley.NetworkResponse performRequest(com.android.volley.Request) -> a
    void logSlowRequests(long,com.android.volley.Request,byte[],org.apache.http.StatusLine) -> a
    void attemptRetryOnException(java.lang.String,com.android.volley.Request,com.android.volley.VolleyError) -> a
    void addCacheHeaders(java.util.Map,com.android.volley.Cache$Entry) -> a
    byte[] entityToBytes(org.apache.http.HttpEntity) -> a
    java.util.Map convertHeaders(org.apache.http.Header[]) -> a
com.android.volley.toolbox.ByteArrayPool -> com.a.a.a.b:
    java.util.List mBuffersByLastUse -> b
    java.util.List mBuffersBySize -> c
    int mCurrentSize -> d
    int mSizeLimit -> e
    java.util.Comparator BUF_COMPARATOR -> a
    byte[] getBuf(int) -> a
    void returnBuf(byte[]) -> a
    void trim() -> a
com.android.volley.toolbox.ByteArrayPool$1 -> com.a.a.a.c:
    int compare(byte[],byte[]) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.android.volley.toolbox.DiskBasedCache -> com.a.a.a.d:
    java.util.Map mEntries -> a
    long mTotalSize -> b
    java.io.File mRootDirectory -> c
    int mMaxCacheSizeInBytes -> d
    com.android.volley.Cache$Entry get(java.lang.String) -> a
    void initialize() -> a
    void put(java.lang.String,com.android.volley.Cache$Entry) -> a
    void remove(java.lang.String) -> b
    java.lang.String getFilenameForKey(java.lang.String) -> d
    java.io.File getFileForKey(java.lang.String) -> c
    void pruneIfNeeded(int) -> a
    void putEntry(java.lang.String,com.android.volley.toolbox.DiskBasedCache$CacheHeader) -> a
    void removeEntry(java.lang.String) -> e
    byte[] streamToBytes(java.io.InputStream,int) -> a
    int read(java.io.InputStream) -> e
    void writeInt(java.io.OutputStream,int) -> a
    int readInt(java.io.InputStream) -> a
    void writeLong(java.io.OutputStream,long) -> a
    long readLong(java.io.InputStream) -> b
    void writeString(java.io.OutputStream,java.lang.String) -> a
    java.lang.String readString(java.io.InputStream) -> c
    void writeStringStringMap(java.util.Map,java.io.OutputStream) -> a
    java.util.Map readStringStringMap(java.io.InputStream) -> d
com.android.volley.toolbox.DiskBasedCache$CacheHeader -> com.a.a.a.e:
    long size -> a
    java.lang.String key -> b
    java.lang.String etag -> c
    long serverDate -> d
    long ttl -> e
    long softTtl -> f
    java.util.Map responseHeaders -> g
    com.android.volley.toolbox.DiskBasedCache$CacheHeader readHeader(java.io.InputStream) -> a
    com.android.volley.Cache$Entry toCacheEntry(byte[]) -> a
    boolean writeHeader(java.io.OutputStream) -> a
com.android.volley.toolbox.DiskBasedCache$CountingInputStream -> com.a.a.a.f:
    int bytesRead -> a
    int read() -> read
    int read(byte[],int,int) -> read
    int access$1(com.android.volley.toolbox.DiskBasedCache$CountingInputStream) -> a
com.android.volley.toolbox.HttpClientStack -> com.a.a.a.g:
    org.apache.http.client.HttpClient mClient -> a
    void addHeaders(org.apache.http.client.methods.HttpUriRequest,java.util.Map) -> a
    org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> a
    org.apache.http.client.methods.HttpUriRequest createHttpRequest(com.android.volley.Request,java.util.Map) -> b
    void setEntityIfNonEmptyBody(org.apache.http.client.methods.HttpEntityEnclosingRequestBase,com.android.volley.Request) -> a
    void onPrepareRequest(org.apache.http.client.methods.HttpUriRequest) -> a
com.android.volley.toolbox.HttpClientStack$HttpPatch -> com.a.a.a.h:
    java.lang.String getMethod() -> getMethod
com.android.volley.toolbox.HttpHeaderParser -> com.a.a.a.i:
    com.android.volley.Cache$Entry parseCacheHeaders(com.android.volley.NetworkResponse) -> a
    long parseDateAsEpoch(java.lang.String) -> a
    java.lang.String parseCharset(java.util.Map) -> a
com.android.volley.toolbox.HttpStack -> com.a.a.a.j:
    org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> a
com.android.volley.toolbox.HurlStack -> com.a.a.a.k:
    com.android.volley.toolbox.HurlStack$UrlRewriter mUrlRewriter -> a
    javax.net.ssl.SSLSocketFactory mSslSocketFactory -> b
    org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> a
    org.apache.http.HttpEntity entityFromConnection(java.net.HttpURLConnection) -> a
    java.net.HttpURLConnection createConnection(java.net.URL) -> a
    java.net.HttpURLConnection openConnection(java.net.URL,com.android.volley.Request) -> a
    void setConnectionParametersForRequest(java.net.HttpURLConnection,com.android.volley.Request) -> a
    void addBodyIfExists(java.net.HttpURLConnection,com.android.volley.Request) -> b
com.android.volley.toolbox.HurlStack$UrlRewriter -> com.a.a.a.l:
    java.lang.String rewriteUrl(java.lang.String) -> a
com.android.volley.toolbox.JsonObjectPostRequest -> com.a.a.a.m:
    java.util.Map mMap -> a
    com.android.volley.Response$Listener mListener -> b
    java.util.Map getParams() -> l
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> a
    void deliverResponse(org.json.JSONObject) -> a
    void deliverResponse(java.lang.Object) -> b
com.android.volley.toolbox.PoolingByteArrayOutputStream -> com.a.a.a.n:
    com.android.volley.toolbox.ByteArrayPool mPool -> a
    void close() -> close
    void finalize() -> finalize
    void expand(int) -> a
    void write(byte[],int,int) -> write
    void write(int) -> write
com.android.volley.toolbox.Volley -> com.a.a.a.o:
    com.android.volley.RequestQueue newRequestQueue(android.content.Context,com.android.volley.toolbox.HttpStack) -> a
    com.android.volley.RequestQueue newRequestQueue(android.content.Context) -> a
com.doubleservice.DataVO.BrandDataVO -> com.doubleservice.a.a:
    java.lang.String bID -> a
    java.lang.String bTitle -> b
    java.lang.String bImg -> c
    java.lang.String bFloor -> d
    java.lang.String bContent -> e
    java.lang.String bPosX -> f
    java.lang.String bPosY -> g
    java.lang.String bArea -> h
    java.lang.String bShopList -> i
com.doubleservice.DataVO.ChildDataVO -> com.doubleservice.a.b:
    java.lang.String mBeaconNumebr -> a
    int mWarningDistance -> b
    boolean bIsSound -> c
    boolean bIsWarnning -> d
    boolean bIsBeaconSetting -> e
com.doubleservice.DataVO.GlobalDataVO -> com.doubleservice.a.c:
    int CURRENT_DRAWER_ITEM -> a
    boolean isDetectPage -> b
    boolean isFingerPrintDownloading -> c
    boolean isPhoneNumberUpdate -> d
    int NOTIFICATION_PARKING_ALARM_ID -> e
com.doubleservice.DataVO.GlobalDataVO$AlertMsg -> com.doubleservice.a.d:
    com.doubleservice.DataVO.GlobalDataVO$AlertMsg GetArticleFail -> a
    com.doubleservice.DataVO.GlobalDataVO$AlertMsg[] ENUM$VALUES -> b
    com.doubleservice.DataVO.GlobalDataVO$AlertMsg[] values() -> values
    com.doubleservice.DataVO.GlobalDataVO$AlertMsg valueOf(java.lang.String) -> valueOf
com.doubleservice.DataVO.NavDataVO -> com.doubleservice.a.e:
    int MethodID -> a
    java.lang.String ItemName -> b
    java.lang.String PositionX -> c
    java.lang.String PositionY -> d
    java.lang.String Number -> e
    java.lang.String Area -> f
    java.lang.String Floor -> g
    java.lang.String FriendTel -> h
com.doubleservice.DataVO.ParkingVO -> com.doubleservice.a.f:
    boolean isParking -> a
    boolean soundOpen -> b
    int mParkingHour -> c
    int mParkingMinute -> d
    java.lang.String mTime -> e
com.doubleservice.DataVO.PushMsgVO -> com.doubleservice.a.g:
    java.lang.String pushMsg -> a
    java.lang.String flag -> b
    java.lang.String timeLimit -> c
    java.lang.String fileExt -> d
    java.lang.String fileName -> e
    java.lang.String url -> f
com.doubleservice.DataVO.RequestCodeVO -> com.doubleservice.a.h:
    java.lang.String CMD_REQ_RESERVATION -> a
    java.lang.String CMD_REQ_PROMOTIONAL_FLOOR -> b
    java.lang.String CMD_REQ_PROMOTIONAL -> c
    java.lang.String CMD_NAV_DINNING_ROOM -> d
    java.lang.String CMD_REQ_DINNING_ROOM_CODE -> e
    java.lang.String CMD_REQ_RESERVATION_CHOICE -> f
    java.lang.String CMD_REQ_PROMOTIONAL_LIST -> g
    java.lang.String CMD_REQ_BRAND_PAGE -> h
    java.lang.String CMD_BRAND_FLOOR -> i
    java.lang.String CMD_PARKING_ALARM_NOTIFICATION -> j
    java.lang.String CMD_REQ_ISPARKING -> k
    java.lang.String CMD_NAV -> l
    java.lang.String CMD_NAV_FIND_FRIEND -> m
    java.lang.String CMD_NAV_PARKING -> n
    java.lang.String CMD_NAV_PROMOTIONAL -> o
    java.lang.String CMD_NAV_BRAND -> p
com.doubleservice.DataVO.ReservationVO -> com.doubleservice.a.i:
    boolean bIsReservation -> a
    int mReservationPosition -> b
com.doubleservice.bigcitynavigation.AES -> com.doubleservice.bigcitynavigation.a:
    java.lang.String stringKey -> a
    java.lang.String encrypt_AES(java.lang.String) -> a
    java.lang.String decrypt_AES_ParsingSomeChar(java.lang.String) -> b
    java.lang.String toUtf8(java.lang.String) -> c
com.doubleservice.bigcitynavigation.AdActivity -> com.doubleservice.bigcitynavigation.AdActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.doubleservice.bigcitynavigation.ApplicationController -> com.doubleservice.bigcitynavigation.ApplicationController:
    com.doubleservice.bigcitynavigation.ApplicationController mInstance -> m
    java.util.HashMap beacons -> n
    com.radiusnetworks.ibeacon.IBeaconManager iBeaconManager -> o
    java.lang.String TAG -> p
    com.android.volley.RequestQueue mRequestQueue -> q
    map.navi.Data.BitmapLruCache cache -> a
    android.content.Context mContext -> r
    java.util.ArrayList locationsData -> b
    com.doubleservice.DataVO.NavDataVO navData -> c
    java.lang.String[] bigCityBeaconArray -> s
    java.lang.String[] sogoBeaconArray -> t
    java.lang.String floor -> d
    java.lang.String mLocationApDetail -> e
    float knnPos_X -> f
    float knnPos_Y -> g
    java.lang.String knnPos_XAndYBelongFloor -> h
    java.util.ArrayList deviceLocationsData -> i
    boolean isNeedToLocateToAPPoint -> j
    float nearAPX -> k
    float nearAPY -> l
    android.os.Handler handler -> u
    void onCreate() -> onCreate
    java.lang.String[] getDevicePosition(java.lang.String) -> a
    void parseDeviceData() -> g
    java.lang.String getDeviceLocationXMLStringByElementAndTagName(org.w3c.dom.Element,java.lang.String) -> a
    java.lang.String getStringByResId(int) -> a
    float convertDpToPixel(float) -> a
    com.doubleservice.DataVO.NavDataVO getLocationDataByNumber(java.lang.String) -> b
    void pListRunner() -> h
    void parseLocation() -> i
    java.lang.String getXMLStringByElementAndTagName(org.w3c.dom.Element,java.lang.String) -> b
    com.doubleservice.bigcitynavigation.ApplicationController getInstance() -> a
    java.lang.String getUuid() -> b
    com.android.volley.RequestQueue getRequestQueue() -> c
    void addToRequestQueue(com.android.volley.Request) -> a
    void onIBeaconServiceStart() -> d
    void onIBeaconServiceConnect() -> onIBeaconServiceConnect
    java.lang.String getFloor() -> e
    android.content.Context access$0() -> f
    android.os.Handler access$1(com.doubleservice.bigcitynavigation.ApplicationController) -> a
    void access$2(com.doubleservice.bigcitynavigation.ApplicationController,java.util.HashMap) -> a
    java.util.HashMap access$3(com.doubleservice.bigcitynavigation.ApplicationController) -> b
com.doubleservice.bigcitynavigation.ApplicationController$1 -> com.doubleservice.bigcitynavigation.b:
    com.doubleservice.bigcitynavigation.ApplicationController this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.doubleservice.bigcitynavigation.ApplicationController$2 -> com.doubleservice.bigcitynavigation.c:
    com.doubleservice.bigcitynavigation.ApplicationController this$0 -> a
    void run() -> run
com.doubleservice.bigcitynavigation.ApplicationController$3 -> com.doubleservice.bigcitynavigation.d:
    com.doubleservice.bigcitynavigation.ApplicationController this$0 -> a
    void didRangeBeaconsInRegion(java.util.Collection,com.radiusnetworks.ibeacon.Region) -> didRangeBeaconsInRegion
com.doubleservice.bigcitynavigation.BaseAlertMsg -> com.doubleservice.bigcitynavigation.e:
    java.lang.String TAG -> b
    com.doubleservice.bigcitynavigation.FreeHomepage homepageActivity -> a
com.doubleservice.bigcitynavigation.BaseAlertMsg$1 -> com.doubleservice.bigcitynavigation.f:
    com.doubleservice.bigcitynavigation.BaseAlertMsg this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.bigcitynavigation.BaseAlertMsg$2 -> com.doubleservice.bigcitynavigation.g:
    com.doubleservice.bigcitynavigation.BaseAlertMsg this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.bigcitynavigation.DevicePositionData -> com.doubleservice.bigcitynavigation.h:
    java.lang.String deviceName -> a
    java.lang.String devicePosX -> b
    java.lang.String devicePosY -> c
    java.lang.String getDeviceName() -> a
    java.lang.String getDevicePosX() -> b
    java.lang.String getDevicePosY() -> c
com.doubleservice.bigcitynavigation.FreeHomepage -> com.doubleservice.bigcitynavigation.FreeHomepage:
    java.lang.String TAG -> b
    com.doubleservice.bigcitynavigation.HomepageLayout mpLayout -> c
    android.app.ProgressDialog apiRequestDialog -> d
    android.view.View$OnClickListener homepageBtnClick -> a
    void onCreate(android.os.Bundle) -> onCreate
    void initService() -> b
    void intiAppData() -> c
    void getArticle() -> a
    void articleData(boolean,org.json.JSONObject) -> a
    void copydatabase(java.lang.String) -> a
    void setLayout() -> d
    java.lang.String access$0(com.doubleservice.bigcitynavigation.FreeHomepage) -> a
com.doubleservice.bigcitynavigation.FreeHomepage$1 -> com.doubleservice.bigcitynavigation.i:
    com.doubleservice.bigcitynavigation.FreeHomepage this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.bigcitynavigation.FreeHomepage$2 -> com.doubleservice.bigcitynavigation.j:
    com.doubleservice.bigcitynavigation.FreeHomepage this$0 -> a
    void run() -> run
com.doubleservice.bigcitynavigation.HomepageLayout -> com.doubleservice.bigcitynavigation.k:
    android.widget.ImageView header -> a
    android.widget.ImageView mFloor -> b
    android.widget.ImageView mFood -> c
    android.widget.ImageView mFindfriend -> d
    android.widget.ImageView mFindchild -> e
    android.widget.ImageView mParking -> f
    android.widget.ImageView mPromotion -> g
    android.widget.ImageView mBrand -> h
    android.widget.ImageView mHappygo -> i
    android.content.Context mContext -> j
com.doubleservice.bigcitynavigation.IbeaconService -> com.doubleservice.bigcitynavigation.IbeaconService:
    java.lang.String TAG -> f
    java.util.ArrayList push_beacon -> g
    java.lang.String[] major -> h
    java.lang.String[] minor -> i
    java.lang.String[] pushName -> j
    boolean[] alertOnce -> k
    java.lang.Long pretime -> l
    java.util.HashMap beacons -> a
    java.util.ArrayList scanDataList -> m
    java.util.ArrayList[] rssiGroup -> n
    java.util.ArrayList mApName -> b
    int[] mApScanRssi -> c
    int maxScanCount -> o
    int mScanCount -> p
    int FUNCTION_SITESURVEY -> q
    int FUNCTION_LOCATION -> r
    int mFunctioName -> s
    boolean bIsPointScanningDone -> t
    java.lang.String[] bigCityBeaconArray -> u
    java.lang.String[] sogoBeaconArray -> v
    java.util.ArrayList scanList -> d
    lib.locate.KNN.WifiReferencePointProxy proxy -> e
    java.lang.String currentFloor -> w
    int changeFloorTimeLimit -> x
    int changeTime -> y
    android.content.BroadcastReceiver mBroadcastReceiver -> z
    void onCreate() -> onCreate
    void initialLocateList() -> b
    void variableReset() -> c
    void onDestroy() -> onDestroy
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void checkCurrentFloorAndChangeScanListAndDataBase() -> d
    void checkCurrentMap(java.util.ArrayList) -> b
    void calculateMeanRssi() -> e
    void clearBeaconRssiArray() -> f
    void setCurrentLocationRssi(int[],java.util.ArrayList) -> a
    void scanAnalyze() -> g
    void knnSortingDistanceStrongToWeak(java.util.ArrayList) -> a
    java.lang.String access$0(com.doubleservice.bigcitynavigation.IbeaconService) -> a
    void access$1(com.doubleservice.bigcitynavigation.IbeaconService,java.util.ArrayList) -> a
    int access$2(com.doubleservice.bigcitynavigation.IbeaconService) -> b
    void access$3(com.doubleservice.bigcitynavigation.IbeaconService,int) -> a
    java.util.ArrayList[] access$4(com.doubleservice.bigcitynavigation.IbeaconService) -> c
    java.util.ArrayList access$5(com.doubleservice.bigcitynavigation.IbeaconService) -> d
    boolean[] access$6(com.doubleservice.bigcitynavigation.IbeaconService) -> e
    java.lang.Long access$7(com.doubleservice.bigcitynavigation.IbeaconService) -> f
    int access$8(com.doubleservice.bigcitynavigation.IbeaconService) -> g
    int access$9() -> a
    void access$10(com.doubleservice.bigcitynavigation.IbeaconService,int) -> b
    int access$11(com.doubleservice.bigcitynavigation.IbeaconService) -> h
    void access$12(com.doubleservice.bigcitynavigation.IbeaconService) -> i
    void access$13(com.doubleservice.bigcitynavigation.IbeaconService) -> j
    java.util.ArrayList access$14(com.doubleservice.bigcitynavigation.IbeaconService) -> k
com.doubleservice.bigcitynavigation.IbeaconService$1 -> com.doubleservice.bigcitynavigation.l:
    com.doubleservice.bigcitynavigation.IbeaconService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.doubleservice.bigcitynavigation.MemberHappyGo -> com.doubleservice.bigcitynavigation.MemberHappyGo:
    java.lang.String webUrl -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setComponent() -> a
com.doubleservice.bigcitynavigation.MemberHappyGo$1 -> com.doubleservice.bigcitynavigation.m:
    com.doubleservice.bigcitynavigation.MemberHappyGo this$0 -> a
    android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String) -> shouldInterceptRequest
com.doubleservice.bigcitynavigation.Navigation -> com.doubleservice.bigcitynavigation.Navigation:
    java.lang.String TAG -> f
    map.navi.component.NavigationView naviView -> g
    map.navi.component.NavigationIndoorPosition indoorPosition -> h
    map.navi.component.NavigationSensor sensor -> i
    map.navi.component.NavigationCalculator navigationCalculator -> j
    map.navi.component.PushMessageManager pushMessageManager -> k
    android.widget.TextView txTop -> l
    map.navi.ViewComponent.NavigationPopupView popupWindow -> m
    android.app.ProgressDialog changeMapDialog -> n
    map.navi.Data.NaviPlan plan -> a
    int currentMapIndex -> o
    android.content.BroadcastReceiver mReceiver -> p
    java.util.ArrayList scannedIbeacons -> q
    java.util.ArrayList scannedPushMessageIBeacons -> r
    java.util.ArrayList scannedPositionIBeacons -> s
    boolean isMoved -> t
    boolean isLocate -> u
    boolean showDialog -> v
    boolean isTouchedPanel -> w
    boolean detectTouchPanelThreadOpen -> x
    int startPositionIndex -> y
    int endPositionIndex -> z
    int countKNNLocateOutOfLimit -> A
    int KNNLocateOutOfLimitTimes -> B
    int theNumberofPassedKNNLocatePosition -> C
    float theLimetMeterBetweenKNNAndLocatePoint -> D
    float theLimitMeterBetweenKNNAndINS -> E
    boolean isLocated -> F
    boolean isNeedRoute -> G
    float pre_azimuth -> H
    float current_azimuth -> I
    boolean isThreadRotate -> J
    boolean isNavigating -> b
    boolean isNextTarget -> c
    int currentNavigationRouteTargetIndex -> K
    map.navi.Data.NaviNode currentTargetNode -> L
    boolean isNormalMode -> M
    boolean isNavigatingButToKnn -> N
    boolean isShowArrivedInformation -> O
    boolean isNeedGoToPark -> P
    boolean isNeedTOFoodorShop -> Q
    int currentMode -> R
    boolean isFromonActivityResult -> S
    boolean isInitial -> T
    boolean isBeaoncMode -> U
    int changeMapTime -> V
    int mapDifferentTime -> W
    boolean detectChangeMap -> X
    boolean targetNotInSameMap -> Y
    boolean isParkingFirstOpen -> Z
    com.doubleservice.DataVO.NavDataVO currentNavData -> aa
    boolean bIsHotzoneDialogOpen -> ab
    boolean isMsgDialogOpen -> ac
    boolean isNeedToOpenFile -> ad
    boolean isChangingMap -> ae
    boolean everChangingMap -> af
    java.lang.String changingName -> ag
    boolean isStopSearchFriend -> ah
    boolean parkingFirstTime -> ai
    boolean isTopushMessage -> aj
    java.util.ArrayList aryBeaconMsg -> ak
    boolean manInMove -> al
    java.lang.Runnable mThreadMapChange -> am
    android.os.Handler mapChangeHandler -> an
    android.os.Handler touchPanelHandler -> ao
    java.lang.Runnable mThreadtouchPanel -> ap
    java.lang.Runnable testrotateThread -> aq
    boolean isTest -> ar
    android.os.Handler testRotateHandler -> as
    float[] current_xy -> d
    float standard_azimuth -> e
    boolean once -> at
    android.os.Handler rotateHandler -> au
    int floorSelection -> av
    map.navi.Data.POI currentEndPOINode -> aw
    boolean isFirstTimeToGo -> ax
    java.lang.Runnable mThreadFriendChange -> ay
    android.os.Handler friendChangeHandler -> az
    void onCreate(android.os.Bundle) -> onCreate
    void updateLocateToServer(float[]) -> a
    void updateLocateToServer(float,float) -> a
    void parseNavigationMsg(org.json.JSONObject,boolean) -> a
    boolean isBeaconInCache(java.lang.String) -> b
    void goToPushMsgFileActivity(com.doubleservice.DataVO.PushMsgVO) -> a
    void onPause() -> onPause
    void changeMapByMapName(java.lang.String) -> a
    void onResume() -> onResume
    void naviToFoodAndShop() -> a
    void startLocate() -> b
    float[] getNextNodeXYOnPath() -> e
    int findCurrentLocatePointInWhichRouteRegion() -> f
    void checkLocatePointNextNode() -> g
    void showArrivedMessage(java.lang.String) -> c
    void testRotate() -> h
    void rotateLocatePointToDirectTarget() -> i
    float getRotate(float[],float[]) -> a
    void registerBroadcastReceiver() -> j
    void rotateThread() -> k
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void changeFloorDialog() -> l
    void setCurrentIndoorPositionMapByIndex(int) -> a
    void initMapById(int) -> b
    void closeNavigation() -> c
    void openNavigation() -> d
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void getFriendLocation() -> m
    void getFriendLocation(boolean,org.json.JSONObject) -> a
    void updateFriendLocation(float,float,java.lang.String) -> a
    android.os.Handler access$0(com.doubleservice.bigcitynavigation.Navigation) -> a
    android.app.ProgressDialog access$1(com.doubleservice.bigcitynavigation.Navigation) -> b
    void access$2(com.doubleservice.bigcitynavigation.Navigation,boolean) -> a
    void access$3(com.doubleservice.bigcitynavigation.Navigation,boolean) -> b
    map.navi.component.NavigationIndoorPosition access$4(com.doubleservice.bigcitynavigation.Navigation) -> c
    int access$5(com.doubleservice.bigcitynavigation.Navigation) -> d
    map.navi.component.NavigationView access$6(com.doubleservice.bigcitynavigation.Navigation) -> e
    int access$7(com.doubleservice.bigcitynavigation.Navigation) -> f
    map.navi.ViewComponent.NavigationPopupView access$8(com.doubleservice.bigcitynavigation.Navigation) -> g
    boolean access$9(com.doubleservice.bigcitynavigation.Navigation) -> h
    void access$10(com.doubleservice.bigcitynavigation.Navigation,boolean) -> c
    void access$11(com.doubleservice.bigcitynavigation.Navigation,map.navi.Data.POI) -> a
    map.navi.Data.POI access$12(com.doubleservice.bigcitynavigation.Navigation) -> i
    void access$13(com.doubleservice.bigcitynavigation.Navigation,boolean) -> d
    int access$14(com.doubleservice.bigcitynavigation.Navigation) -> j
    void access$15(com.doubleservice.bigcitynavigation.Navigation,int) -> a
    boolean access$16(com.doubleservice.bigcitynavigation.Navigation) -> k
    boolean access$17(com.doubleservice.bigcitynavigation.Navigation) -> l
    void access$18(com.doubleservice.bigcitynavigation.Navigation) -> m
    float[] access$19(com.doubleservice.bigcitynavigation.Navigation) -> n
    float access$20(com.doubleservice.bigcitynavigation.Navigation,float[],float[]) -> a
    int access$21(com.doubleservice.bigcitynavigation.Navigation) -> o
    map.navi.component.NavigationCalculator access$22(com.doubleservice.bigcitynavigation.Navigation) -> p
    float access$23(com.doubleservice.bigcitynavigation.Navigation) -> q
    boolean access$24(com.doubleservice.bigcitynavigation.Navigation) -> r
    void access$25(com.doubleservice.bigcitynavigation.Navigation,float,float) -> a
    void access$26(com.doubleservice.bigcitynavigation.Navigation) -> s
    boolean access$27(com.doubleservice.bigcitynavigation.Navigation) -> t
    void access$28(com.doubleservice.bigcitynavigation.Navigation,boolean) -> e
    void access$29(com.doubleservice.bigcitynavigation.Navigation,java.lang.String) -> a
    void access$30(com.doubleservice.bigcitynavigation.Navigation,boolean) -> f
    void access$31(com.doubleservice.bigcitynavigation.Navigation,boolean) -> g
    android.os.Handler access$32(com.doubleservice.bigcitynavigation.Navigation) -> u
    android.os.Handler access$33(com.doubleservice.bigcitynavigation.Navigation) -> v
    boolean access$34(com.doubleservice.bigcitynavigation.Navigation) -> w
    void access$35(com.doubleservice.bigcitynavigation.Navigation,boolean) -> h
    void access$36(com.doubleservice.bigcitynavigation.Navigation) -> x
    java.lang.Runnable access$37(com.doubleservice.bigcitynavigation.Navigation) -> y
    float access$38(com.doubleservice.bigcitynavigation.Navigation) -> z
    android.os.Handler access$39(com.doubleservice.bigcitynavigation.Navigation) -> A
    boolean access$40(com.doubleservice.bigcitynavigation.Navigation) -> B
    void access$41(com.doubleservice.bigcitynavigation.Navigation) -> C
    void access$42(com.doubleservice.bigcitynavigation.Navigation,boolean) -> i
    boolean access$43(com.doubleservice.bigcitynavigation.Navigation) -> D
    void access$44(com.doubleservice.bigcitynavigation.Navigation,boolean) -> j
    void access$45(com.doubleservice.bigcitynavigation.Navigation,com.doubleservice.DataVO.PushMsgVO) -> a
    boolean access$46(com.doubleservice.bigcitynavigation.Navigation) -> E
    void access$47(com.doubleservice.bigcitynavigation.Navigation,boolean) -> k
    boolean access$48(com.doubleservice.bigcitynavigation.Navigation) -> F
    void access$49(com.doubleservice.bigcitynavigation.Navigation,boolean) -> l
    boolean access$50(com.doubleservice.bigcitynavigation.Navigation) -> G
    boolean access$51(com.doubleservice.bigcitynavigation.Navigation) -> H
    boolean access$52(com.doubleservice.bigcitynavigation.Navigation) -> I
    java.lang.Runnable access$53(com.doubleservice.bigcitynavigation.Navigation) -> J
    void access$54(com.doubleservice.bigcitynavigation.Navigation,boolean) -> m
    void access$55(com.doubleservice.bigcitynavigation.Navigation,float) -> a
    boolean access$56(com.doubleservice.bigcitynavigation.Navigation) -> K
    void access$57(com.doubleservice.bigcitynavigation.Navigation,boolean) -> n
    void access$58(com.doubleservice.bigcitynavigation.Navigation) -> L
    java.util.ArrayList access$59(com.doubleservice.bigcitynavigation.Navigation) -> M
    void access$60(com.doubleservice.bigcitynavigation.Navigation,int) -> b
    void access$61(com.doubleservice.bigcitynavigation.Navigation,int) -> c
    void access$62(com.doubleservice.bigcitynavigation.Navigation,int) -> d
    java.lang.String access$63(com.doubleservice.bigcitynavigation.Navigation) -> N
    int access$64(com.doubleservice.bigcitynavigation.Navigation) -> O
    void access$65(com.doubleservice.bigcitynavigation.Navigation,int) -> e
    int access$66(com.doubleservice.bigcitynavigation.Navigation) -> P
    boolean access$67(com.doubleservice.bigcitynavigation.Navigation) -> Q
    float access$68(com.doubleservice.bigcitynavigation.Navigation) -> R
    int access$69(com.doubleservice.bigcitynavigation.Navigation) -> S
    void access$70(com.doubleservice.bigcitynavigation.Navigation,int) -> f
    int access$71(com.doubleservice.bigcitynavigation.Navigation) -> T
    void access$72(com.doubleservice.bigcitynavigation.Navigation,float[]) -> a
    boolean access$73(com.doubleservice.bigcitynavigation.Navigation) -> U
    void access$74(com.doubleservice.bigcitynavigation.Navigation,boolean) -> o
    com.doubleservice.DataVO.NavDataVO access$75(com.doubleservice.bigcitynavigation.Navigation) -> V
    void access$76(com.doubleservice.bigcitynavigation.Navigation,boolean) -> p
    void access$77(com.doubleservice.bigcitynavigation.Navigation,boolean) -> q
    boolean access$78(com.doubleservice.bigcitynavigation.Navigation) -> W
    void access$79(com.doubleservice.bigcitynavigation.Navigation,boolean) -> r
    boolean access$80(com.doubleservice.bigcitynavigation.Navigation) -> X
    boolean access$81(com.doubleservice.bigcitynavigation.Navigation) -> Y
    void access$82(com.doubleservice.bigcitynavigation.Navigation,boolean) -> s
    void access$83(com.doubleservice.bigcitynavigation.Navigation,boolean) -> t
    boolean access$84(com.doubleservice.bigcitynavigation.Navigation) -> Z
    android.os.Handler access$85(com.doubleservice.bigcitynavigation.Navigation) -> aa
    void access$86(com.doubleservice.bigcitynavigation.Navigation,int) -> g
    void access$87(com.doubleservice.bigcitynavigation.Navigation,int) -> h
    int access$88(com.doubleservice.bigcitynavigation.Navigation) -> ab
com.doubleservice.bigcitynavigation.Navigation$1 -> com.doubleservice.bigcitynavigation.n:
    com.doubleservice.bigcitynavigation.Navigation this$0 -> a
    void run() -> run
com.doubleservice.bigcitynavigation.Navigation$10 -> com.doubleservice.bigcitynavigation.o:
    com.doubleservice.bigcitynavigation.Navigation this$0 -> a
    com.doubleservice.DataVO.PushMsgVO val$vo -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.bigcitynavigation.Navigation$11 -> com.doubleservice.bigcitynavigation.p:
    com.doubleservice.bigcitynavigation.Navigation this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.bigcitynavigation.Navigation$12 -> com.doubleservice.bigcitynavigation.q:
    com.doubleservice.bigcitynavigation.Navigation this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.bigcitynavigation.Navigation$13 -> com.doubleservice.bigcitynavigation.r:
    com.doubleservice.bigcitynavigation.Navigation this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.doubleservice.bigcitynavigation.Navigation$14 -> com.doubleservice.bigcitynavigation.s:
    com.doubleservice.bigcitynavigation.Navigation this$0 -> a
    void run() -> run
com.doubleservice.bigcitynavigation.Navigation$15 -> com.doubleservice.bigcitynavigation.t:
    com.doubleservice.bigcitynavigation.Navigation this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.bigcitynavigation.Navigation$16 -> com.doubleservice.bigcitynavigation.u:
    com.doubleservice.bigcitynavigation.Navigation this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.bigcitynavigation.Navigation$17 -> com.doubleservice.bigcitynavigation.v:
    com.doubleservice.bigcitynavigation.Navigation this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.bigcitynavigation.Navigation$18 -> com.doubleservice.bigcitynavigation.w:
    com.doubleservice.bigcitynavigation.Navigation this$0 -> a
    void onResponse(org.json.JSONObject) -> a
    void onResponse(java.lang.Object) -> a
com.doubleservice.bigcitynavigation.Navigation$19 -> com.doubleservice.bigcitynavigation.x:
    com.doubleservice.bigcitynavigation.Navigation this$0 -> a
    void onErrorResponse(com.android.volley.VolleyError) -> a
com.doubleservice.bigcitynavigation.Navigation$2 -> com.doubleservice.bigcitynavigation.y:
    com.doubleservice.bigcitynavigation.Navigation this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.doubleservice.bigcitynavigation.Navigation$3 -> com.doubleservice.bigcitynavigation.z:
    com.doubleservice.bigcitynavigation.Navigation this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.doubleservice.bigcitynavigation.Navigation$4 -> com.doubleservice.bigcitynavigation.aa:
    com.doubleservice.bigcitynavigation.Navigation this$0 -> a
    void run() -> run
com.doubleservice.bigcitynavigation.Navigation$5 -> com.doubleservice.bigcitynavigation.ab:
    com.doubleservice.bigcitynavigation.Navigation this$0 -> a
    void run() -> run
com.doubleservice.bigcitynavigation.Navigation$6 -> com.doubleservice.bigcitynavigation.ac:
    com.doubleservice.bigcitynavigation.Navigation this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.doubleservice.bigcitynavigation.Navigation$7 -> com.doubleservice.bigcitynavigation.ad:
    com.doubleservice.bigcitynavigation.Navigation this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.doubleservice.bigcitynavigation.Navigation$8 -> com.doubleservice.bigcitynavigation.ae:
    com.doubleservice.bigcitynavigation.Navigation this$0 -> a
    void run() -> run
com.doubleservice.bigcitynavigation.Navigation$9 -> com.doubleservice.bigcitynavigation.af:
    com.doubleservice.bigcitynavigation.Navigation this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.doubleservice.bigcitynavigation.PushMessageService -> com.doubleservice.bigcitynavigation.PushMessageService:
    java.lang.String TAG -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    void showParkingNotification() -> a
    void onDestroy() -> onDestroy
com.doubleservice.bigcitynavigation.PushMsgFileActivity -> com.doubleservice.bigcitynavigation.PushMsgFileActivity:
    android.app.ProgressDialog pd -> a
    java.lang.String fileType -> b
    java.lang.String filePath -> c
    com.doubleservice.DataVO.PushMsgVO vo -> d
    java.lang.String TAG -> e
    java.lang.String webUrl -> f
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.doubleservice.bigcitynavigation.WiFiService -> com.doubleservice.bigcitynavigation.WiFiService:
    java.lang.String TAG -> e
    java.util.ArrayList push_beacon -> f
    java.util.ArrayList scanDataList -> g
    java.util.ArrayList[] rssiGroup -> h
    java.util.ArrayList mApName -> a
    int[] mApScanRssi -> b
    int maxScanCount -> i
    int mScanCount -> j
    int FUNCTION_SITESURVEY -> k
    int FUNCTION_LOCATION -> l
    int mFunctioName -> m
    java.lang.String[] bigCityWiFiArray -> n
    java.lang.String[] sogoWiFiArray -> o
    lib.locate.KNN.WifiReferencePointProxy proxy -> c
    java.lang.String currentFloor -> p
    android.net.wifi.WifiManager wiFiManager -> d
    int changeFloorTimeLimit -> q
    int changeTime -> r
    android.content.BroadcastReceiver mBroadcastReceiver -> s
    void onCreate() -> onCreate
    void initialLocateList() -> b
    void variableReset() -> c
    void onDestroy() -> onDestroy
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void checkCurrentFloorAndChangeScanListAndDataBase() -> d
    void checkCurrentMap(java.util.List) -> a
    void calculateMeanRssi() -> e
    void clearBeaconRssiArray() -> f
    java.lang.String access$0(com.doubleservice.bigcitynavigation.WiFiService) -> a
    int access$1(com.doubleservice.bigcitynavigation.WiFiService) -> b
    void access$2(com.doubleservice.bigcitynavigation.WiFiService,int) -> a
    void access$3(com.doubleservice.bigcitynavigation.WiFiService,java.util.List) -> a
    java.util.ArrayList[] access$4(com.doubleservice.bigcitynavigation.WiFiService) -> c
    int access$5(com.doubleservice.bigcitynavigation.WiFiService) -> d
    int access$6() -> a
    void access$7(com.doubleservice.bigcitynavigation.WiFiService,int) -> b
    int access$8(com.doubleservice.bigcitynavigation.WiFiService) -> e
    void access$9(com.doubleservice.bigcitynavigation.WiFiService) -> f
    void access$10(com.doubleservice.bigcitynavigation.WiFiService) -> g
com.doubleservice.bigcitynavigation.WiFiService$1 -> com.doubleservice.bigcitynavigation.ag:
    com.doubleservice.bigcitynavigation.WiFiService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.doubleservice.bigcitynavigation.drawer.BaseDrawerActivity -> com.doubleservice.bigcitynavigation.drawer.BaseDrawerActivity:
    java.lang.String TAG -> a
    android.support.v4.widget.DrawerLayout mDrawerLayout -> b
    android.widget.ListView mDrawerList -> c
    com.doubleservice.bigcitynavigation.drawer.CustomDrawerAdapter adapter -> d
    java.util.List dataList -> e
    android.support.v4.app.ActionBarDrawerToggle mDrawerToggle -> f
    android.content.Intent intent -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void access$0(com.doubleservice.bigcitynavigation.drawer.BaseDrawerActivity,android.content.Intent) -> a
    android.content.Intent access$1(com.doubleservice.bigcitynavigation.drawer.BaseDrawerActivity) -> a
    android.support.v4.widget.DrawerLayout access$2(com.doubleservice.bigcitynavigation.drawer.BaseDrawerActivity) -> b
    android.widget.ListView access$3(com.doubleservice.bigcitynavigation.drawer.BaseDrawerActivity) -> c
    java.lang.String access$4(com.doubleservice.bigcitynavigation.drawer.BaseDrawerActivity) -> d
com.doubleservice.bigcitynavigation.drawer.BaseDrawerActivity$1 -> com.doubleservice.bigcitynavigation.drawer.a:
    com.doubleservice.bigcitynavigation.drawer.BaseDrawerActivity this$0 -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerOpened(android.view.View) -> a
com.doubleservice.bigcitynavigation.drawer.BaseDrawerActivity$DrawerItemClickListener -> com.doubleservice.bigcitynavigation.drawer.b:
    com.doubleservice.bigcitynavigation.drawer.BaseDrawerActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    com.doubleservice.bigcitynavigation.drawer.BaseDrawerActivity access$1(com.doubleservice.bigcitynavigation.drawer.BaseDrawerActivity$DrawerItemClickListener) -> a
com.doubleservice.bigcitynavigation.drawer.BaseDrawerActivity$DrawerItemClickListener$1 -> com.doubleservice.bigcitynavigation.drawer.c:
    com.doubleservice.bigcitynavigation.drawer.BaseDrawerActivity$DrawerItemClickListener this$1 -> a
    void run() -> run
com.doubleservice.bigcitynavigation.drawer.CustomDrawerAdapter -> com.doubleservice.bigcitynavigation.drawer.d:
    android.content.Context context -> a
    java.util.List drawerItemList -> b
    int layoutResID -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.doubleservice.bigcitynavigation.drawer.CustomDrawerAdapter$DrawerItemHolder -> com.doubleservice.bigcitynavigation.drawer.e:
    android.widget.TextView ItemName -> a
    android.widget.TextView title -> b
    android.widget.ImageView icon -> c
    android.widget.LinearLayout headerLayout -> d
    android.widget.LinearLayout itemLayout -> e
com.doubleservice.bigcitynavigation.drawer.DrawerItem -> com.doubleservice.bigcitynavigation.drawer.f:
    java.lang.String ItemName -> a
    int imgResID -> b
    java.lang.String title -> c
    java.lang.String getItemName() -> a
    int getImgResID() -> b
    java.lang.String getTitle() -> c
com.doubleservice.bigcitynavigation.graph.BiGraph -> com.doubleservice.bigcitynavigation.a.a:
    void printNodes() -> a
    void printEdges() -> b
    void print() -> c
com.doubleservice.bigcitynavigation.graph.Edge -> com.doubleservice.bigcitynavigation.a.b:
    java.lang.String id -> a
    java.lang.Object data -> b
    com.doubleservice.bigcitynavigation.graph.Node sourceNode -> c
    com.doubleservice.bigcitynavigation.graph.Node targetNode -> d
    java.lang.String getID() -> a
    void setID(java.lang.String) -> a
    java.lang.Object getData() -> b
    void setData(java.lang.Object) -> a
    com.doubleservice.bigcitynavigation.graph.Node getSourceNode() -> c
    com.doubleservice.bigcitynavigation.graph.Node getTargetNode() -> d
    void print() -> e
    void println() -> f
com.doubleservice.bigcitynavigation.graph.Graph -> com.doubleservice.bigcitynavigation.a.c:
    java.util.ArrayList edges -> a
    java.util.ArrayList nodes -> b
    java.util.ArrayList getNodes() -> d
    java.util.ArrayList getEdges() -> e
    com.doubleservice.bigcitynavigation.graph.Edge newEdge(com.doubleservice.bigcitynavigation.graph.Node,com.doubleservice.bigcitynavigation.graph.Node,java.lang.String,java.lang.Object) -> a
    void add(com.doubleservice.bigcitynavigation.graph.Node) -> a
    void addNodes(java.util.ArrayList) -> a
    void addEdges(java.util.ArrayList) -> b
    boolean remove(com.doubleservice.bigcitynavigation.graph.Edge) -> a
    void printNodes() -> a
    void printEdges() -> b
    void print() -> c
com.doubleservice.bigcitynavigation.graph.Node -> com.doubleservice.bigcitynavigation.a.d:
    java.lang.String id -> a
    java.util.ArrayList inEdges -> b
    java.util.ArrayList outEdges -> c
    com.doubleservice.bigcitynavigation.graph.Graph graph -> d
    java.lang.String getID() -> a
    void setID(java.lang.String) -> a
    void addInEdge(com.doubleservice.bigcitynavigation.graph.Edge) -> a
    void removeInEdge(com.doubleservice.bigcitynavigation.graph.Edge) -> b
    void addOutEdge(com.doubleservice.bigcitynavigation.graph.Edge) -> c
    void removeOutEdge(com.doubleservice.bigcitynavigation.graph.Edge) -> d
    void print() -> b
    void println() -> c
com.doubleservice.brand.BrandDBHelper -> com.doubleservice.brand.a:
    java.lang.String TAG -> a
    java.lang.String name -> b
    int dbVersion -> c
    boolean dbCreateFlag -> d
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void close() -> close
com.doubleservice.brand.BrandDBProxy -> com.doubleservice.brand.b:
    android.content.Context mContext -> a
    com.doubleservice.brand.BrandDBHelper dbHelper -> b
    android.database.sqlite.SQLiteDatabase db -> c
    java.lang.String TAG -> d
    int mCount -> e
    java.lang.String[] brandAreas -> f
    java.lang.String[] brandContents -> g
    java.lang.String[] brandIDs -> h
    java.lang.String[] brandImgs -> i
    java.lang.String[] brandTitles -> j
    java.lang.String[] posX -> k
    java.lang.String[] posY -> l
    java.lang.String[] shopList -> m
    java.lang.String[] column -> n
    void initDB() -> a
    void closeDB() -> b
    void onCreateBrandInitData(com.doubleservice.DataVO.BrandDataVO) -> a
    void onCreatePromotionalInitData(com.doubleservice.DataVO.BrandDataVO) -> b
    com.doubleservice.DataVO.BrandDataVO findPromotionalDataById(java.lang.String) -> a
    com.doubleservice.DataVO.BrandDataVO findDataById(java.lang.String) -> b
    void queryPromotionalData(int) -> a
    void queryBrandData(int) -> b
    int getBrandCount() -> c
    java.lang.String[] getShopList() -> d
    java.lang.String[] getBrandAreas() -> e
    java.lang.String[] getBrandContent() -> f
    java.lang.String[] getBrandID() -> g
    java.lang.String[] getBrandImg() -> h
    java.lang.String[] getBrandTitles() -> i
    java.lang.String[] getBrandPosX() -> j
    java.lang.String[] getBrandPosY() -> k
com.doubleservice.brand.BrandLayout -> com.doubleservice.brand.c:
    android.widget.ImageView bottomView -> a
    com.james.views.FreeLayout bottomLayout -> b
    android.widget.ImageView btnNav -> c
    com.james.views.FreeLayout topLayout -> d
    android.widget.ImageView bgPic -> e
    android.widget.ImageView img -> f
    android.widget.ImageView img_location_small -> g
    com.james.views.FreeTextView brandTitle -> h
    com.james.views.FreeTextView brandArea -> i
    android.widget.ImageView line -> j
    android.widget.TextView brandContent -> k
com.doubleservice.brand.BrandList -> com.doubleservice.brand.BrandList:
    java.lang.String TAG -> b
    int mFloor -> c
    int mCount -> d
    java.lang.String[] brandAreas -> e
    java.lang.String[] brandContents -> f
    java.lang.String[] brandIDs -> g
    java.lang.String[] brandImgs -> h
    java.lang.String[] brandTitles -> i
    java.lang.String[] posX -> j
    java.lang.String[] posY -> k
    java.util.ArrayList dataList -> l
    android.widget.ListView mListview -> m
    com.doubleservice.brand.BrandListAdapter adapter -> n
    com.doubleservice.brand.BrandDBProxy proxy -> o
    android.widget.AbsListView$OnScrollListener mScrollListener -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void setComponent() -> b
    void openPageByNum(java.lang.String) -> a
    java.util.ArrayList getData() -> c
    void initListData() -> a
    com.doubleservice.brand.BrandListAdapter access$0(com.doubleservice.brand.BrandList) -> a
    java.lang.String access$1(com.doubleservice.brand.BrandList) -> b
    java.util.ArrayList access$2(com.doubleservice.brand.BrandList) -> c
com.doubleservice.brand.BrandList$1 -> com.doubleservice.brand.d:
    com.doubleservice.brand.BrandList this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.doubleservice.brand.BrandList$2 -> com.doubleservice.brand.e:
    com.doubleservice.brand.BrandList this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.doubleservice.brand.BrandListAdapter -> com.doubleservice.brand.f:
    android.content.Context mContext -> b
    int mCount -> c
    android.view.LayoutInflater myInflater -> d
    java.util.ArrayList list -> a
    com.doubleservice.memorycontroller.ImageLoader mImageLoader -> e
    boolean mBusy -> f
    void setFlagBusy(boolean) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.doubleservice.brand.BrandListAdapter$ViewHolder -> com.doubleservice.brand.g:
    android.widget.TextView title -> a
    android.widget.TextView content -> b
    android.widget.ImageView img -> c
com.doubleservice.brand.FreeBrandPage -> com.doubleservice.brand.FreeBrandPage:
    java.lang.String TAG -> a
    java.lang.String id -> b
    com.doubleservice.brand.BrandLayout mpLayout -> c
    com.doubleservice.memorycontroller.ImageLoader mImageLoader -> d
    com.doubleservice.brand.BrandDBProxy proxy -> e
    com.doubleservice.DataVO.NavDataVO navDataVO -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void findBrandDataById(java.lang.String) -> a
    void goToNavigation() -> a
    void setLayout() -> b
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    com.doubleservice.DataVO.NavDataVO access$0(com.doubleservice.brand.FreeBrandPage) -> a
com.doubleservice.brand.FreeBrandPage$1 -> com.doubleservice.brand.h:
    com.doubleservice.brand.FreeBrandPage this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.brand.FreeBrandPage$2 -> com.doubleservice.brand.i:
    com.doubleservice.brand.FreeBrandPage this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.brand.FreeBrandPage$3 -> com.doubleservice.brand.j:
    com.doubleservice.brand.FreeBrandPage this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.brand.MainBrandLayout -> com.doubleservice.brand.MainBrandLayout:
    android.content.Context context -> a
    android.support.v4.view.ViewPager pager -> b
    android.app.LocalActivityManager manager -> c
    int offset -> d
    int currIndex -> e
    int bmpW -> f
    android.widget.TextView t1 -> g
    android.widget.TextView t2 -> h
    void onCreate(android.os.Bundle) -> onCreate
    void initPagerViewer() -> a
    android.view.View getView(java.lang.String,android.content.Intent) -> a
    void initTextView() -> b
    int access$0(com.doubleservice.brand.MainBrandLayout) -> a
    int access$1(com.doubleservice.brand.MainBrandLayout) -> b
    android.widget.TextView access$2(com.doubleservice.brand.MainBrandLayout) -> c
    android.widget.TextView access$3(com.doubleservice.brand.MainBrandLayout) -> d
    int access$4(com.doubleservice.brand.MainBrandLayout) -> e
    void access$5(com.doubleservice.brand.MainBrandLayout,int) -> a
    android.support.v4.view.ViewPager access$6(com.doubleservice.brand.MainBrandLayout) -> f
com.doubleservice.brand.MainBrandLayout$MyOnClickListener -> com.doubleservice.brand.k:
    int index -> b
    com.doubleservice.brand.MainBrandLayout this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.brand.MainBrandLayout$MyOnPageChangeListener -> com.doubleservice.brand.l:
    int one -> a
    int two -> b
    com.doubleservice.brand.MainBrandLayout this$0 -> c
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
com.doubleservice.brand.MainBrandLayout$MyPagerAdapter -> com.doubleservice.brand.m:
    java.util.List list -> a
    com.doubleservice.brand.MainBrandLayout this$0 -> b
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    int getCount() -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    android.os.Parcelable saveState() -> b
    void startUpdate(android.view.View) -> a
com.doubleservice.dr.DinningRoomList -> com.doubleservice.dr.DinningRoomList:
    java.lang.String TAG -> b
    java.lang.String[] imgUrlList -> c
    com.doubleservice.memorycontroller.ImageLoader mImageLoader -> d
    android.view.View$OnClickListener btnClick -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setComponent() -> a
    void openDinningRoomNum(int,java.lang.String) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void getReservation() -> b
    void openNoReservationDialog() -> c
    void openSortingDialog() -> d
com.doubleservice.dr.DinningRoomList$1 -> com.doubleservice.dr.a:
    com.doubleservice.dr.DinningRoomList this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.dr.DinningRoomList$2 -> com.doubleservice.dr.b:
    com.doubleservice.dr.DinningRoomList this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.dr.DinningRoomList$3 -> com.doubleservice.dr.c:
    com.doubleservice.dr.DinningRoomList this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.dr.DinningRoomList$4 -> com.doubleservice.dr.d:
    com.doubleservice.dr.DinningRoomList this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.dr.DinningRoomList$5 -> com.doubleservice.dr.e:
    com.doubleservice.dr.DinningRoomList this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.dr.DinningRoomPageLayout -> com.doubleservice.dr.f:
    android.widget.ImageView bottomView -> a
    com.james.views.FreeLayout navBtnLayout -> b
    android.widget.ImageView btnNavigation -> c
    com.james.views.FreeLayout reserveBtnLayout -> d
    android.widget.ImageView btnReservation -> e
    android.widget.ImageView imgContentView -> f
com.doubleservice.dr.FreeDinningRoomPage -> com.doubleservice.dr.FreeDinningRoomPage:
    com.doubleservice.dr.DinningRoomPageLayout mpLayout -> a
    java.lang.String TAG -> b
    int mPosition -> c
    java.lang.String mLocationCode -> d
    boolean bIsDrReserved -> e
    com.doubleservice.DataVO.NavDataVO navDataVO -> f
    int[] imgContentUrl -> g
    int whichItem -> h
    void onCreate(android.os.Bundle) -> onCreate
    void getReservation() -> d
    void setLayout() -> e
    void goToNavigation() -> a
    void goToOtherFloor() -> b
    void openReservationDialog() -> c
    void goToReservationPageByChoice(int) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    java.lang.String access$0(com.doubleservice.dr.FreeDinningRoomPage) -> a
    java.lang.String access$1(com.doubleservice.dr.FreeDinningRoomPage) -> b
    com.doubleservice.DataVO.NavDataVO access$2(com.doubleservice.dr.FreeDinningRoomPage) -> c
    void access$3(com.doubleservice.dr.FreeDinningRoomPage,int) -> a
    int access$4(com.doubleservice.dr.FreeDinningRoomPage) -> d
    int access$5(com.doubleservice.dr.FreeDinningRoomPage) -> e
com.doubleservice.dr.FreeDinningRoomPage$1 -> com.doubleservice.dr.g:
    com.doubleservice.dr.FreeDinningRoomPage this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.dr.FreeDinningRoomPage$2 -> com.doubleservice.dr.h:
    com.doubleservice.dr.FreeDinningRoomPage this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.dr.FreeDinningRoomPage$3 -> com.doubleservice.dr.i:
    com.doubleservice.dr.FreeDinningRoomPage this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.dr.FreeDinningRoomPage$4 -> com.doubleservice.dr.j:
    com.doubleservice.dr.FreeDinningRoomPage this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.dr.FreeDinningRoomPage$6 -> com.doubleservice.dr.k:
    com.doubleservice.dr.FreeDinningRoomPage this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.dr.FreeDinningRoomPage$7 -> com.doubleservice.dr.l:
    com.doubleservice.dr.FreeDinningRoomPage this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.dr.FreeDinningRoomPage$8 -> com.doubleservice.dr.m:
    com.doubleservice.dr.FreeDinningRoomPage this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.dr.FreeReservation -> com.doubleservice.dr.FreeReservation:
    java.lang.String TAG -> a
    int mPosition -> b
    com.doubleservice.dr.ReservationLayout mpLayout -> c
    void onCreate(android.os.Bundle) -> onCreate
    void setComponent() -> a
    void getReservation() -> b
com.doubleservice.dr.FreeReservationByNumber -> com.doubleservice.dr.FreeReservationByNumber:
    java.lang.String TAG -> a
    int mPosition -> b
    java.lang.String mLocationCode -> c
    com.doubleservice.memorycontroller.ImageLoader mImageLoader -> d
    java.lang.String[] imgUrl -> e
    com.doubleservice.dr.ReservationNumberLayout mpLayout -> f
    com.doubleservice.DataVO.NavDataVO navDataVO -> g
    void onCreate(android.os.Bundle) -> onCreate
    void setupView() -> b
    void clearMyReservation() -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    com.doubleservice.DataVO.NavDataVO access$0(com.doubleservice.dr.FreeReservationByNumber) -> a
    java.lang.String access$1(com.doubleservice.dr.FreeReservationByNumber) -> b
com.doubleservice.dr.FreeReservationByNumber$1 -> com.doubleservice.dr.n:
    com.doubleservice.dr.FreeReservationByNumber this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.dr.FreeReservationByNumber$2 -> com.doubleservice.dr.o:
    com.doubleservice.dr.FreeReservationByNumber this$0 -> a
    void onClick(android.view.View) -> onClick
    com.doubleservice.dr.FreeReservationByNumber access$0(com.doubleservice.dr.FreeReservationByNumber$2) -> a
com.doubleservice.dr.FreeReservationByNumber$2$1 -> com.doubleservice.dr.p:
    com.doubleservice.dr.FreeReservationByNumber$2 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.dr.FreeReservationByNumber$2$2 -> com.doubleservice.dr.q:
    com.doubleservice.dr.FreeReservationByNumber$2 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.dr.FreeReservationByTime -> com.doubleservice.dr.FreeReservationByTime:
    com.doubleservice.dr.ReservationByTimeLayout mpLayout -> a
    java.lang.String TAG -> b
    int hour -> c
    int min -> d
    int mPosition -> e
    void onCreate(android.os.Bundle) -> onCreate
    void setupView() -> d
    void openTimePicker() -> a
    void openPeoplePicker() -> b
    void goToReservationInfo() -> c
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void access$0(com.doubleservice.dr.FreeReservationByTime,int) -> a
    void access$1(com.doubleservice.dr.FreeReservationByTime,int) -> b
    int access$2(com.doubleservice.dr.FreeReservationByTime) -> a
    int access$3(com.doubleservice.dr.FreeReservationByTime) -> b
    com.doubleservice.dr.ReservationByTimeLayout access$4(com.doubleservice.dr.FreeReservationByTime) -> c
com.doubleservice.dr.FreeReservationByTime$1 -> com.doubleservice.dr.r:
    com.doubleservice.dr.FreeReservationByTime this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.dr.FreeReservationByTime$10 -> com.doubleservice.dr.s:
    com.doubleservice.dr.FreeReservationByTime this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.dr.FreeReservationByTime$2 -> com.doubleservice.dr.t:
    com.doubleservice.dr.FreeReservationByTime this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.dr.FreeReservationByTime$3 -> com.doubleservice.dr.u:
    com.doubleservice.dr.FreeReservationByTime this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.dr.FreeReservationByTime$4 -> com.doubleservice.dr.v:
    com.doubleservice.dr.FreeReservationByTime this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.dr.FreeReservationByTime$5 -> com.doubleservice.dr.w:
    com.doubleservice.dr.FreeReservationByTime this$0 -> a
    void onTimeChanged(android.widget.TimePicker,int,int) -> onTimeChanged
com.doubleservice.dr.FreeReservationByTime$6 -> com.doubleservice.dr.x:
    com.doubleservice.dr.FreeReservationByTime this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.dr.FreeReservationByTime$7 -> com.doubleservice.dr.y:
    com.doubleservice.dr.FreeReservationByTime this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.dr.FreeReservationByTime$8 -> com.doubleservice.dr.z:
    com.doubleservice.dr.FreeReservationByTime this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.dr.FreeReservationByTime$9 -> com.doubleservice.dr.aa:
    com.doubleservice.dr.FreeReservationByTime this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.dr.FreeReservationInfo -> com.doubleservice.dr.FreeReservationInfo:
    java.lang.String TAG -> a
    int mPosition -> b
    java.lang.String mLocationCode -> c
    com.doubleservice.memorycontroller.ImageLoader mImageLoader -> d
    java.lang.String[] imgUrl -> e
    com.doubleservice.DataVO.NavDataVO navDataVO -> f
    com.doubleservice.dr.ReservationInfoLayout mpLayout -> g
    void onCreate(android.os.Bundle) -> onCreate
    void setComponent() -> b
    void clearMyReservation() -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    int access$0(com.doubleservice.dr.FreeReservationInfo) -> a
    com.doubleservice.DataVO.NavDataVO access$1(com.doubleservice.dr.FreeReservationInfo) -> b
com.doubleservice.dr.FreeReservationInfo$1 -> com.doubleservice.dr.ab:
    com.doubleservice.dr.FreeReservationInfo this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.dr.FreeReservationInfo$2 -> com.doubleservice.dr.ac:
    com.doubleservice.dr.FreeReservationInfo this$0 -> a
    void onClick(android.view.View) -> onClick
    com.doubleservice.dr.FreeReservationInfo access$0(com.doubleservice.dr.FreeReservationInfo$2) -> a
com.doubleservice.dr.FreeReservationInfo$2$1 -> com.doubleservice.dr.ad:
    com.doubleservice.dr.FreeReservationInfo$2 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.dr.FreeReservationInfo$2$2 -> com.doubleservice.dr.ae:
    com.doubleservice.dr.FreeReservationInfo$2 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.dr.ReservationByTimeLayout -> com.doubleservice.dr.af:
    android.widget.ImageView topViewBackground -> a
    com.james.views.FreeTextView topViewContent -> b
    com.james.views.FreeTextView txtReservationTime -> c
    com.james.views.FreeTextView timePicker -> d
    android.widget.ImageView imgViewLine -> e
    com.james.views.FreeTextView txtReservationPeople -> f
    com.james.views.FreeTextView peoplePicker -> g
    android.widget.ImageView imgViewLine2 -> h
    com.james.views.FreeLayout bottmCancelLayout -> i
    android.widget.ImageView btnCancel -> j
    com.james.views.FreeLayout bottomOkLayout -> k
    android.widget.ImageView btnComplete -> l
com.doubleservice.dr.ReservationInfoLayout -> com.doubleservice.dr.ag:
    android.widget.ImageView topView -> a
    android.widget.ImageView viewNumber -> b
    android.widget.ImageView imgBottom -> c
    com.james.views.FreeLayout bottomReserveLayout -> d
    android.widget.ImageView btnNavigation -> e
    com.james.views.FreeLayout bottomCancelLayout -> f
    android.widget.ImageView btnCancel -> g
com.doubleservice.dr.ReservationLayout -> com.doubleservice.dr.ah:
    android.widget.ImageView bottomView -> a
    com.james.views.FreeLayout navBtnLayout -> b
    android.widget.ImageView btnNavigation -> c
    com.james.views.FreeLayout reserveBtnLayout -> d
    android.widget.ImageView btnReservationCancel -> e
    android.widget.ImageView imgContentView -> f
com.doubleservice.dr.ReservationNumberLayout -> com.doubleservice.dr.ai:
    android.widget.ImageView topView -> a
    android.widget.ImageView viewNumber -> b
    android.widget.ImageView imgBottom -> c
    com.james.views.FreeLayout bottomReserveLayout -> d
    android.widget.ImageView btnNavigation -> e
    com.james.views.FreeLayout bottomCancelLayout -> f
    android.widget.ImageView btnCancel -> g
com.doubleservice.findchild.ChildBeaconSetup -> com.doubleservice.findchild.ChildBeaconSetup:
    java.lang.String TAG -> a
    android.widget.TextView mWarningDistance -> b
    java.lang.String[] beacon -> c
    java.lang.String[] m -> d
    android.widget.ImageView mSoundBox -> e
    android.widget.ImageView mWarnBox -> f
    boolean bIsSoundOpen -> g
    boolean bIsSoundEnable -> h
    boolean bIsWarnEnable -> i
    com.doubleservice.DataVO.ChildDataVO mChildVO -> j
    int mDis -> k
    boolean isWarning -> l
    boolean isBeaconSetup -> m
    java.lang.String mDeviceNumber -> n
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void getPreference() -> b
    void setupView() -> c
    void clearBeacon() -> a
    void openDeleteDialog() -> d
    boolean checkBeaconNumber(java.lang.String) -> a
    void setWarningDistance(int) -> a
    void setChildBeaconPreference(java.lang.String) -> b
    void goToChildDetectPage() -> e
    void setWarning(boolean) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean access$0(com.doubleservice.findchild.ChildBeaconSetup) -> a
    void access$1(com.doubleservice.findchild.ChildBeaconSetup,boolean) -> a
    android.widget.ImageView access$2(com.doubleservice.findchild.ChildBeaconSetup) -> b
    void access$3(com.doubleservice.findchild.ChildBeaconSetup,boolean) -> b
    boolean access$4(com.doubleservice.findchild.ChildBeaconSetup,java.lang.String) -> a
    void access$5(com.doubleservice.findchild.ChildBeaconSetup,java.lang.String) -> b
    boolean access$6(com.doubleservice.findchild.ChildBeaconSetup) -> c
    void access$7(com.doubleservice.findchild.ChildBeaconSetup,boolean) -> c
    android.widget.ImageView access$8(com.doubleservice.findchild.ChildBeaconSetup) -> d
    void access$9(com.doubleservice.findchild.ChildBeaconSetup,boolean) -> d
    java.lang.String[] access$10(com.doubleservice.findchild.ChildBeaconSetup) -> e
    void access$11(com.doubleservice.findchild.ChildBeaconSetup,int) -> a
com.doubleservice.findchild.ChildBeaconSetup$1 -> com.doubleservice.findchild.a:
    com.doubleservice.findchild.ChildBeaconSetup this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.findchild.ChildBeaconSetup$2 -> com.doubleservice.findchild.b:
    com.doubleservice.findchild.ChildBeaconSetup this$0 -> a
    android.widget.EditText val$editMajor -> b
    void onClick(android.view.View) -> onClick
com.doubleservice.findchild.ChildBeaconSetup$3 -> com.doubleservice.findchild.c:
    com.doubleservice.findchild.ChildBeaconSetup this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.findchild.ChildBeaconSetup$4 -> com.doubleservice.findchild.d:
    com.doubleservice.findchild.ChildBeaconSetup this$0 -> a
    void onClick(android.view.View) -> onClick
    com.doubleservice.findchild.ChildBeaconSetup access$0(com.doubleservice.findchild.ChildBeaconSetup$4) -> a
com.doubleservice.findchild.ChildBeaconSetup$4$1 -> com.doubleservice.findchild.e:
    com.doubleservice.findchild.ChildBeaconSetup$4 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.findchild.ChildBeaconSetup$5 -> com.doubleservice.findchild.f:
    com.doubleservice.findchild.ChildBeaconSetup this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.findchild.ChildBeaconSetup$6 -> com.doubleservice.findchild.g:
    com.doubleservice.findchild.ChildBeaconSetup this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.findchild.ChildBeaconSetup$7 -> com.doubleservice.findchild.h:
    com.doubleservice.findchild.ChildBeaconSetup this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.findchild.ChildDetectService -> com.doubleservice.findchild.ChildDetectService:
    java.lang.String TAG -> a
    int alarmDis -> b
    double childDistance -> c
    boolean isBeaconSetup -> d
    int overDistanceCount -> e
    java.lang.String mBeaconNumber -> f
    com.doubleservice.DataVO.ChildDataVO vo -> g
    boolean bIsSoundOpen -> h
    android.content.BroadcastReceiver mBroadcastReceiver -> i
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void getUserSetting() -> b
    void receiveBeaconData() -> c
    void launchAlert() -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void access$0(com.doubleservice.findchild.ChildDetectService) -> a
    java.lang.String access$1(com.doubleservice.findchild.ChildDetectService) -> b
    java.lang.String access$2(com.doubleservice.findchild.ChildDetectService) -> c
    void access$3(com.doubleservice.findchild.ChildDetectService,double) -> a
    double access$4(com.doubleservice.findchild.ChildDetectService) -> d
    int access$5(com.doubleservice.findchild.ChildDetectService) -> e
    int access$6(com.doubleservice.findchild.ChildDetectService) -> f
    void access$7(com.doubleservice.findchild.ChildDetectService,int) -> a
    boolean access$8(com.doubleservice.findchild.ChildDetectService) -> g
com.doubleservice.findchild.ChildDetectService$1 -> com.doubleservice.findchild.i:
    com.doubleservice.findchild.ChildDetectService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.doubleservice.findchild.DetectPage -> com.doubleservice.findchild.DetectPage:
    java.lang.String TAG -> a
    java.lang.String mBeaconNumber -> b
    com.doubleservice.DataVO.ChildDataVO vo -> c
    double childDistance -> d
    int alarmDis -> e
    int overDistanceCount -> f
    boolean bIsDialogOpen -> g
    android.graphics.drawable.AnimationDrawable frameAnim -> h
    android.widget.TextView mDeviceName -> i
    android.widget.TextView mDetectRegion -> j
    android.content.BroadcastReceiver mBroadcastReceiver -> k
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void startUpRegister() -> d
    void launchAlert() -> a
    void alertNoSuchDevice() -> b
    void goToSetting() -> c
    double calDistance(int) -> a
    void getUserSetting() -> e
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    java.lang.String access$0(com.doubleservice.findchild.DetectPage) -> a
    java.lang.String access$1(com.doubleservice.findchild.DetectPage) -> b
    void access$2(com.doubleservice.findchild.DetectPage,double) -> a
    double access$3(com.doubleservice.findchild.DetectPage) -> c
    int access$4(com.doubleservice.findchild.DetectPage) -> d
    int access$5(com.doubleservice.findchild.DetectPage) -> e
    void access$6(com.doubleservice.findchild.DetectPage,int) -> a
    void access$7(com.doubleservice.findchild.DetectPage,boolean) -> a
com.doubleservice.findchild.DetectPage$1 -> com.doubleservice.findchild.j:
    com.doubleservice.findchild.DetectPage this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.doubleservice.findchild.DetectPage$2 -> com.doubleservice.findchild.k:
    com.doubleservice.findchild.DetectPage this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.findchild.DetectPage$3 -> com.doubleservice.findchild.l:
    com.doubleservice.findchild.DetectPage this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.findchild.DetectPage$4 -> com.doubleservice.findchild.m:
    com.doubleservice.findchild.DetectPage this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.findchild.FindChildDescription -> com.doubleservice.findchild.FindChildDescription:
    void onCreate(android.os.Bundle) -> onCreate
    void setupView() -> b
    void showNoBle() -> a
com.doubleservice.findchild.FindChildDescription$1 -> com.doubleservice.findchild.n:
    com.doubleservice.findchild.FindChildDescription this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.findchild.FindChildDescription$2 -> com.doubleservice.findchild.o:
    com.doubleservice.findchild.FindChildDescription this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.findfriends.FindFriendDes -> com.doubleservice.findfriends.FindFriendDes:
    java.lang.String TAG -> a
    android.widget.EditText phoneEditView -> b
    android.widget.ImageView confirmBtn -> c
    void onCreate(android.os.Bundle) -> onCreate
    void setupView() -> c
    void phoneCheckRes(boolean) -> a
    void addMember() -> a
    void goToFriendListPage() -> b
    android.widget.EditText access$0(com.doubleservice.findfriends.FindFriendDes) -> a
com.doubleservice.findfriends.FindFriendDes$1 -> com.doubleservice.findfriends.a:
    com.doubleservice.findfriends.FindFriendDes this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.findfriends.FindFriendDes$2 -> com.doubleservice.findfriends.b:
    com.doubleservice.findfriends.FindFriendDes this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.findfriends.FriendList -> com.doubleservice.findfriends.FriendList:
    java.util.ArrayList allMemberList -> b
    java.util.ArrayList dataList -> c
    android.widget.ListView mListview -> d
    com.doubleservice.findfriends.FriendListAdapter adapter -> e
    java.lang.String TAG -> f
    android.app.ProgressDialog apiRequestDialog -> g
    java.lang.String mSearchFriendPhone -> a
    com.doubleservice.DataVO.NavDataVO friendNavDataVO -> h
    android.widget.ImageView emptyView -> i
    void onCreate(android.os.Bundle) -> onCreate
    void getContactList() -> a
    void getFriendLocation(boolean,org.json.JSONObject) -> a
    void getFriendLocationFail() -> b
    void goToNavigation(com.doubleservice.DataVO.NavDataVO) -> a
    void searchFriendFail() -> c
    void getMembers(boolean,org.json.JSONObject) -> b
    void setupView() -> d
    void searchFriendLocation(java.lang.String) -> a
    void finishLoadingData() -> e
    java.util.ArrayList getData() -> f
    void access$0(com.doubleservice.findfriends.FriendList) -> a
    java.util.ArrayList access$1(com.doubleservice.findfriends.FriendList) -> b
com.doubleservice.findfriends.FriendList$1 -> com.doubleservice.findfriends.c:
    com.doubleservice.findfriends.FriendList this$0 -> a
    void run() -> run
com.doubleservice.findfriends.FriendList$2 -> com.doubleservice.findfriends.d:
    com.doubleservice.findfriends.FriendList this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.findfriends.FriendList$3 -> com.doubleservice.findfriends.e:
    com.doubleservice.findfriends.FriendList this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.findfriends.FriendList$4 -> com.doubleservice.findfriends.f:
    com.doubleservice.findfriends.FriendList this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.doubleservice.findfriends.FriendList$5 -> com.doubleservice.findfriends.g:
    com.doubleservice.findfriends.FriendList this$0 -> a
    void run() -> run
com.doubleservice.findfriends.FriendListAdapter -> com.doubleservice.findfriends.h:
    android.content.Context mContext -> b
    android.view.LayoutInflater myInflater -> c
    java.util.ArrayList list -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.doubleservice.findfriends.FriendListAdapter$ViewHolder -> com.doubleservice.findfriends.i:
    android.widget.TextView name -> a
    android.widget.TextView phone -> b
com.doubleservice.memorycontroller.AbstractFileCache -> com.doubleservice.b.a:
    java.lang.String dirString -> a
    java.io.File getFile(java.lang.String) -> a
    java.lang.String getSavePath(java.lang.String) -> b
    java.lang.String getCacheDir() -> a
com.doubleservice.memorycontroller.CommonUtil -> com.doubleservice.b.b:
    boolean hasSDCard() -> a
    java.lang.String getRootFilePath() -> b
com.doubleservice.memorycontroller.FileCache -> com.doubleservice.b.c:
    java.lang.String getSavePath(java.lang.String) -> b
    java.lang.String getCacheDir() -> a
com.doubleservice.memorycontroller.FileHelper -> com.doubleservice.b.d:
    boolean createDirectory(java.lang.String) -> a
com.doubleservice.memorycontroller.FileManager -> com.doubleservice.b.e:
    java.lang.String getSaveFilePath() -> a
com.doubleservice.memorycontroller.ImageLoader -> com.doubleservice.b.f:
    com.doubleservice.memorycontroller.MemoryCache memoryCache -> a
    com.doubleservice.memorycontroller.AbstractFileCache fileCache -> b
    java.util.Map imageViews -> c
    java.util.concurrent.ExecutorService executorService -> d
    void DisplayImage(java.lang.String,android.widget.ImageView,boolean) -> a
    void queuePhoto(java.lang.String,android.widget.ImageView) -> a
    android.graphics.Bitmap getBitmap(java.lang.String) -> a
    android.graphics.Bitmap decodeFile(java.io.File) -> a
    boolean imageViewReused(com.doubleservice.memorycontroller.ImageLoader$PhotoToLoad) -> a
    void CopyStream(java.io.InputStream,java.io.OutputStream) -> a
    android.graphics.Bitmap access$0(com.doubleservice.memorycontroller.ImageLoader,java.lang.String) -> a
    com.doubleservice.memorycontroller.MemoryCache access$1(com.doubleservice.memorycontroller.ImageLoader) -> a
com.doubleservice.memorycontroller.ImageLoader$BitmapDisplayer -> com.doubleservice.b.g:
    android.graphics.Bitmap bitmap -> a
    com.doubleservice.memorycontroller.ImageLoader$PhotoToLoad photoToLoad -> b
    com.doubleservice.memorycontroller.ImageLoader this$0 -> c
    void run() -> run
com.doubleservice.memorycontroller.ImageLoader$PhotoToLoad -> com.doubleservice.b.h:
    java.lang.String url -> a
    android.widget.ImageView imageView -> b
    com.doubleservice.memorycontroller.ImageLoader this$0 -> c
com.doubleservice.memorycontroller.ImageLoader$PhotosLoader -> com.doubleservice.b.i:
    com.doubleservice.memorycontroller.ImageLoader$PhotoToLoad photoToLoad -> a
    com.doubleservice.memorycontroller.ImageLoader this$0 -> b
    void run() -> run
com.doubleservice.memorycontroller.MemoryCache -> com.doubleservice.b.j:
    java.util.Map cache -> a
    long size -> b
    long limit -> c
    void setLimit(long) -> a
    android.graphics.Bitmap get(java.lang.String) -> a
    void put(java.lang.String,android.graphics.Bitmap) -> a
    void checkSize() -> a
    long getSizeInBytes(android.graphics.Bitmap) -> a
com.doubleservice.parking.ParkAlarmReceiver -> com.doubleservice.parking.ParkAlarmReceiver:
    java.lang.String TAG -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.doubleservice.parking.ParkAlarmReceiver$1 -> com.doubleservice.parking.a:
    com.doubleservice.parking.ParkAlarmReceiver this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.parking.ParkDescription -> com.doubleservice.parking.ParkDescription:
    void onCreate(android.os.Bundle) -> onCreate
    void setupView() -> a
com.doubleservice.parking.ParkDescription$1 -> com.doubleservice.parking.b:
    com.doubleservice.parking.ParkDescription this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.parking.ParkWarningSetting -> com.doubleservice.parking.ParkWarningSetting:
    java.lang.String TAG -> a
    android.widget.TextView mTimeSetting -> b
    android.widget.ImageView mRingSetting -> c
    android.widget.ImageView mBtnPrevious -> d
    android.widget.ImageView mBtnComplete -> e
    android.widget.ImageView mBtnDelete -> f
    boolean bIsSoundOpen -> g
    boolean bIsSetting -> h
    boolean bIsParking -> i
    int whichTime -> j
    java.lang.String[] mSorting -> k
    void onCreate(android.os.Bundle) -> onCreate
    void getPreference() -> d
    void setupView() -> e
    void deleteComplete() -> a
    void openSettingDialog() -> b
    void setTextTime() -> c
    void settingComplete() -> f
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean access$0(com.doubleservice.parking.ParkWarningSetting) -> a
    void access$1(com.doubleservice.parking.ParkWarningSetting,boolean) -> a
    android.widget.ImageView access$2(com.doubleservice.parking.ParkWarningSetting) -> b
    void access$3(com.doubleservice.parking.ParkWarningSetting) -> c
    java.lang.String access$4(com.doubleservice.parking.ParkWarningSetting) -> d
    void access$5(com.doubleservice.parking.ParkWarningSetting,int) -> a
com.doubleservice.parking.ParkWarningSetting$1 -> com.doubleservice.parking.c:
    com.doubleservice.parking.ParkWarningSetting this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.parking.ParkWarningSetting$2 -> com.doubleservice.parking.d:
    com.doubleservice.parking.ParkWarningSetting this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.parking.ParkWarningSetting$3 -> com.doubleservice.parking.e:
    com.doubleservice.parking.ParkWarningSetting this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.parking.ParkWarningSetting$4 -> com.doubleservice.parking.f:
    com.doubleservice.parking.ParkWarningSetting this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.parking.ParkWarningSetting$5 -> com.doubleservice.parking.g:
    com.doubleservice.parking.ParkWarningSetting this$0 -> a
    void onClick(android.view.View) -> onClick
    com.doubleservice.parking.ParkWarningSetting access$0(com.doubleservice.parking.ParkWarningSetting$5) -> a
com.doubleservice.parking.ParkWarningSetting$5$1 -> com.doubleservice.parking.h:
    com.doubleservice.parking.ParkWarningSetting$5 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.parking.ParkWarningSetting$5$2 -> com.doubleservice.parking.i:
    com.doubleservice.parking.ParkWarningSetting$5 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.parking.ParkWarningSetting$6 -> com.doubleservice.parking.j:
    com.doubleservice.parking.ParkWarningSetting this$0 -> a
    void onValueChange(android.widget.NumberPicker,int,int) -> onValueChange
com.doubleservice.parking.ParkWarningSetting$7 -> com.doubleservice.parking.k:
    com.doubleservice.parking.ParkWarningSetting this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.parking.ParkWarningSetting$8 -> com.doubleservice.parking.l:
    com.doubleservice.parking.ParkWarningSetting this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.parking.UserParkingInfo -> com.doubleservice.parking.UserParkingInfo:
    java.lang.String TAG -> a
    android.widget.TextView time -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void getPreference() -> c
    void setupView() -> d
    void goToNavigation() -> a
    void settingPage() -> b
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.doubleservice.parking.UserParkingInfo$1 -> com.doubleservice.parking.m:
    com.doubleservice.parking.UserParkingInfo this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.parking.UserParkingInfo$2 -> com.doubleservice.parking.n:
    com.doubleservice.parking.UserParkingInfo this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.parking.UserParkingInfo$3 -> com.doubleservice.parking.o:
    com.doubleservice.parking.UserParkingInfo this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.promotional.FreePromotionalPage -> com.doubleservice.promotional.FreePromotionalPage:
    java.lang.String TAG -> b
    java.lang.String id -> c
    com.doubleservice.memorycontroller.ImageLoader mImageLoader -> d
    com.doubleservice.brand.BrandDBProxy proxy -> e
    com.doubleservice.promotional.PromotionalLayout mpLayout -> f
    com.doubleservice.DataVO.NavDataVO navDataVO -> g
    boolean getNavData -> h
    android.view.View$OnClickListener btnClick -> a
    void onCreate(android.os.Bundle) -> onCreate
    void findBrandDataById(java.lang.String) -> a
    void findNavigationData(java.lang.String) -> b
    void setupView() -> b
    void goToNavigation() -> a
    void onPause() -> onPause
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    java.lang.String access$0(com.doubleservice.promotional.FreePromotionalPage) -> a
    com.doubleservice.DataVO.NavDataVO access$1(com.doubleservice.promotional.FreePromotionalPage) -> b
com.doubleservice.promotional.FreePromotionalPage$1 -> com.doubleservice.promotional.a:
    com.doubleservice.promotional.FreePromotionalPage this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.promotional.FreePromotionalPage$2 -> com.doubleservice.promotional.b:
    com.doubleservice.promotional.FreePromotionalPage this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.promotional.FreePromotionalPage$3 -> com.doubleservice.promotional.c:
    com.doubleservice.promotional.FreePromotionalPage this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.doubleservice.promotional.MainPromotional -> com.doubleservice.promotional.MainPromotional:
    android.content.Context context -> a
    android.support.v4.view.ViewPager pager -> b
    android.app.LocalActivityManager manager -> c
    int offset -> d
    int currIndex -> e
    int bmpW -> f
    android.widget.TextView t1 -> g
    android.widget.TextView t2 -> h
    void onCreate(android.os.Bundle) -> onCreate
    void initPagerViewer() -> a
    android.view.View getView(java.lang.String,android.content.Intent) -> a
    void initTextView() -> b
    int access$0(com.doubleservice.promotional.MainPromotional) -> a
    int access$1(com.doubleservice.promotional.MainPromotional) -> b
    android.widget.TextView access$2(com.doubleservice.promotional.MainPromotional) -> c
    android.widget.TextView access$3(com.doubleservice.promotional.MainPromotional) -> d
    int access$4(com.doubleservice.promotional.MainPromotional) -> e
    void access$5(com.doubleservice.promotional.MainPromotional,int) -> a
    android.support.v4.view.ViewPager access$6(com.doubleservice.promotional.MainPromotional) -> f
com.doubleservice.promotional.MainPromotional$MyOnClickListener -> com.doubleservice.promotional.d:
    int index -> b
    com.doubleservice.promotional.MainPromotional this$0 -> a
    void onClick(android.view.View) -> onClick
com.doubleservice.promotional.MainPromotional$MyOnPageChangeListener -> com.doubleservice.promotional.e:
    int one -> a
    int two -> b
    com.doubleservice.promotional.MainPromotional this$0 -> c
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
com.doubleservice.promotional.MainPromotional$MyPagerAdapter -> com.doubleservice.promotional.f:
    java.util.List list -> a
    com.doubleservice.promotional.MainPromotional this$0 -> b
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    int getCount() -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    android.os.Parcelable saveState() -> b
    void startUpdate(android.view.View) -> a
com.doubleservice.promotional.PromotionalLayout -> com.doubleservice.promotional.g:
    android.widget.ImageView bottomView -> a
    com.james.views.FreeLayout bottomLayout -> b
    android.widget.ImageView btnNav -> c
    com.james.views.FreeLayout topLayout -> d
    android.widget.ImageView bgPic -> e
    android.widget.ImageView img -> f
    android.widget.ImageView img_location_small -> g
    android.widget.TextView brandTitle -> h
    android.widget.TextView brandArea -> i
    android.widget.ImageView line -> j
    android.widget.TextView brandContent -> k
com.doubleservice.promotional.PromotionalList -> com.doubleservice.promotional.PromotionalList:
    int mPosition -> b
    java.lang.String TAG -> c
    com.doubleservice.brand.BrandDBProxy proxy -> d
    int mCount -> e
    java.lang.String[] brandAreas -> f
    java.lang.String[] brandContents -> g
    java.lang.String[] brandIDs -> h
    java.lang.String[] brandImgs -> i
    java.lang.String[] brandTitles -> j
    java.lang.String[] posX -> k
    java.lang.String[] posY -> l
    java.lang.String[] shopList -> m
    java.util.ArrayList dataList -> n
    android.widget.ListView mListview -> o
    com.doubleservice.brand.BrandListAdapter adapter -> p
    int mFloor -> q
    java.util.ArrayList aryBrandVO -> r
    android.widget.AbsListView$OnScrollListener mScrollListener -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void setComponent() -> b
    void initListData() -> a
    java.util.ArrayList getData() -> c
    void openPage(java.lang.String) -> a
    com.doubleservice.brand.BrandListAdapter access$0(com.doubleservice.promotional.PromotionalList) -> a
    java.util.ArrayList access$1(com.doubleservice.promotional.PromotionalList) -> b
com.doubleservice.promotional.PromotionalList$1 -> com.doubleservice.promotional.h:
    com.doubleservice.promotional.PromotionalList this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.doubleservice.promotional.PromotionalList$2 -> com.doubleservice.promotional.i:
    com.doubleservice.promotional.PromotionalList this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.doubleservice.proxy.ApiProxy -> com.doubleservice.c.a:
    java.lang.String TAG -> a
    com.doubleservice.bigcitynavigation.FreeHomepage mHomeActivity -> b
    com.doubleservice.findfriends.FriendList mFriendListActivity -> c
    android.content.Context mContext -> d
    com.doubleservice.bigcitynavigation.AES aes -> e
    java.lang.String forgroundActivity -> f
    java.lang.String[] forgroundActivities -> g
    void getArticle() -> a
    void getFriendLocation() -> b
    void getFingerprintData() -> c
    void analysisFingerResponse(org.json.JSONObject) -> a
    void addMember(java.lang.String) -> a
    void getMemberAll() -> d
com.doubleservice.proxy.ApiProxy$1 -> com.doubleservice.c.b:
    com.doubleservice.proxy.ApiProxy this$0 -> a
    void onResponse(org.json.JSONObject) -> a
    void onResponse(java.lang.Object) -> a
com.doubleservice.proxy.ApiProxy$10 -> com.doubleservice.c.c:
    com.doubleservice.proxy.ApiProxy this$0 -> a
    void onErrorResponse(com.android.volley.VolleyError) -> a
com.doubleservice.proxy.ApiProxy$2 -> com.doubleservice.c.d:
    com.doubleservice.proxy.ApiProxy this$0 -> a
    void onErrorResponse(com.android.volley.VolleyError) -> a
com.doubleservice.proxy.ApiProxy$3 -> com.doubleservice.c.e:
    com.doubleservice.proxy.ApiProxy this$0 -> a
    void onResponse(org.json.JSONObject) -> a
    void onResponse(java.lang.Object) -> a
com.doubleservice.proxy.ApiProxy$4 -> com.doubleservice.c.f:
    com.doubleservice.proxy.ApiProxy this$0 -> a
    void onErrorResponse(com.android.volley.VolleyError) -> a
com.doubleservice.proxy.ApiProxy$5 -> com.doubleservice.c.g:
    com.doubleservice.proxy.ApiProxy this$0 -> a
    void onResponse(org.json.JSONObject) -> a
    void onResponse(java.lang.Object) -> a
com.doubleservice.proxy.ApiProxy$6 -> com.doubleservice.c.h:
    com.doubleservice.proxy.ApiProxy this$0 -> a
    void onErrorResponse(com.android.volley.VolleyError) -> a
com.doubleservice.proxy.ApiProxy$7 -> com.doubleservice.c.i:
    com.doubleservice.proxy.ApiProxy this$0 -> a
    void onResponse(org.json.JSONObject) -> a
    void onResponse(java.lang.Object) -> a
com.doubleservice.proxy.ApiProxy$8 -> com.doubleservice.c.j:
    com.doubleservice.proxy.ApiProxy this$0 -> a
    void onErrorResponse(com.android.volley.VolleyError) -> a
com.doubleservice.proxy.ApiProxy$9 -> com.doubleservice.c.k:
    com.doubleservice.proxy.ApiProxy this$0 -> a
    void onResponse(org.json.JSONObject) -> a
    void onResponse(java.lang.Object) -> a
com.doubleservice.proxy.PreferenceProxy -> com.doubleservice.c.l:
    android.content.Context mContext -> a
    java.lang.String TAG -> b
    void setIsArticleDone(boolean) -> a
    boolean getIsArticleDone() -> a
    void updatePhoneIsDone() -> b
    boolean getIsUpdatePhone() -> c
    void setChildIsTracking() -> d
    boolean isChildTracking() -> e
    void setParking(com.doubleservice.DataVO.ParkingVO) -> a
    com.doubleservice.DataVO.ParkingVO getIsParking() -> f
    void clearParkingData() -> g
    void setChildBeaconData(com.doubleservice.DataVO.ChildDataVO) -> a
    void clearChildTracking() -> h
    com.doubleservice.DataVO.ChildDataVO getChildBeaconData() -> i
    void setReservationType(int) -> a
    int getReservationType() -> j
    void setDinningRoomReservation(int) -> b
    void clearDinningRoomReservation() -> k
    com.doubleservice.DataVO.ReservationVO getDinningRoomReservation() -> l
com.doubleservice.proxy.RtlsApiProxy -> com.doubleservice.c.m:
    java.util.ArrayList floorList -> a
    java.util.ArrayList apNameList -> b
    java.util.ArrayList apMacList -> c
    double rssiMin -> d
    double rssiMax -> e
    java.lang.String flagType -> h
    java.lang.String TAG -> f
    com.doubleservice.bigcitynavigation.Navigation mActivity -> g
    com.android.volley.toolbox.JsonObjectPostRequest updNavigation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    com.android.volley.toolbox.JsonObjectPostRequest updateStatus(java.lang.String) -> a
com.doubleservice.proxy.RtlsApiProxy$1 -> com.doubleservice.c.n:
    com.doubleservice.proxy.RtlsApiProxy this$0 -> a
    void onResponse(org.json.JSONObject) -> a
    void onResponse(java.lang.Object) -> a
com.doubleservice.proxy.RtlsApiProxy$2 -> com.doubleservice.c.o:
    com.doubleservice.proxy.RtlsApiProxy this$0 -> a
    void onErrorResponse(com.android.volley.VolleyError) -> a
com.doubleservice.proxy.RtlsApiProxy$3 -> com.doubleservice.c.p:
    com.doubleservice.proxy.RtlsApiProxy this$0 -> a
    void onResponse(org.json.JSONObject) -> a
    void onResponse(java.lang.Object) -> a
com.doubleservice.proxy.RtlsApiProxy$4 -> com.doubleservice.c.q:
    com.doubleservice.proxy.RtlsApiProxy this$0 -> a
    void onErrorResponse(com.android.volley.VolleyError) -> a
com.james.views.FreeLayout -> com.b.a.a:
    android.content.Context mContext -> m
    android.util.DisplayMetrics dm -> n
    int monitorWidth -> o
    int monitorHeight -> p
    int layoutWidth -> q
    int layoutHeight -> r
    int picSize -> s
    int id -> t
    int idHandle -> u
    int idContent -> v
    float defaultWidth -> a
    int datum -> w
    int VERTICAL -> x
    int HORIZONTAL -> y
    void setDatum(int) -> setDatum
    void setPicSize(int) -> setPicSize
    void setPicSize(int,int,int) -> a
    void setFreeLayoutFF() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    android.view.View addFreeView(android.view.View,int,int) -> a
    android.view.View addFreeView(android.view.View,int,int,int[]) -> a
    android.view.View addFreeView(android.view.View,int,int,int[],android.view.View,int[]) -> a
    android.view.View addFreeView(android.view.View,int,int,int[],android.view.View,int[],android.view.View,int[]) -> a
    android.view.View addFreeView(android.view.View,int,int,int,int) -> a
    void setImageCrop(android.widget.ImageView) -> setImageCrop
    void setImageCrop(android.widget.ImageView,float) -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
com.james.views.FreeTextView -> com.b.a.b:
    android.content.Context mContext -> a
    float sdtDensity -> b
    int picSize -> c
    void setPicSize(int) -> setPicSize
    void setTextSizeFitSp(float) -> setTextSizeFitSp
    void setTextSizeFitPx(float) -> setTextSizeFitPx
    float px2sp(float) -> a
com.longevitysoft.android.util.Stringer -> com.c.a.a.a:
    java.lang.StringBuilder builder -> a
    java.lang.StringBuilder newBuilder() -> a
    java.lang.StringBuilder getBuilder() -> b
    com.longevitysoft.android.util.Stringer convert(java.io.InputStream) -> a
com.longevitysoft.android.xml.plist.BaseXMLParser -> com.c.a.b.a.a:
    com.longevitysoft.android.util.Stringer stringer -> a
    org.xml.sax.helpers.DefaultHandler handler -> d
    javax.xml.parsers.SAXParserFactory spf -> b
    javax.xml.parsers.SAXParser sp -> c
    org.xml.sax.helpers.DefaultHandler getHandler() -> a
    void setHandler(org.xml.sax.helpers.DefaultHandler) -> a
    void initParser() -> b
    void parse(java.lang.String) -> a
com.longevitysoft.android.xml.plist.PListXMLHandler -> com.c.a.b.a.b:
    com.longevitysoft.android.util.Stringer stringer -> b
    com.longevitysoft.android.xml.plist.PListXMLHandler$PListParserListener parseListener -> c
    com.longevitysoft.android.util.Stringer tempVal -> d
    com.longevitysoft.android.xml.plist.domain.PList pList -> e
    java.lang.String key -> a
    com.longevitysoft.android.xml.plist.domain.PList getPlist() -> a
    void setPlist(com.longevitysoft.android.xml.plist.domain.PList) -> a
    void startDocument() -> startDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void characters(char[],int,int) -> characters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.longevitysoft.android.xml.plist.PListXMLHandler$PListParserListener -> com.c.a.b.a.c:
    void onPListParseDone(com.longevitysoft.android.xml.plist.domain.PList,com.longevitysoft.android.xml.plist.PListXMLHandler$ParseMode) -> a
com.longevitysoft.android.xml.plist.PListXMLHandler$ParseMode -> com.c.a.b.a.d:
    com.longevitysoft.android.xml.plist.PListXMLHandler$ParseMode START_TAG -> a
    com.longevitysoft.android.xml.plist.PListXMLHandler$ParseMode END_TAG -> b
    com.longevitysoft.android.xml.plist.PListXMLHandler$ParseMode[] ENUM$VALUES -> c
    com.longevitysoft.android.xml.plist.PListXMLHandler$ParseMode[] values() -> values
    com.longevitysoft.android.xml.plist.PListXMLHandler$ParseMode valueOf(java.lang.String) -> valueOf
com.longevitysoft.android.xml.plist.PListXMLParser -> com.c.a.b.a.e:
    void parse(java.lang.String) -> a
    void parse(java.io.InputStream) -> a
com.longevitysoft.android.xml.plist.domain.Array -> com.c.a.b.a.a.a:
    java.util.ArrayList data -> a
    void add(int,com.longevitysoft.android.xml.plist.domain.PListObject) -> a
    boolean add(com.longevitysoft.android.xml.plist.domain.PListObject) -> a
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    boolean isEmpty() -> isEmpty
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    com.longevitysoft.android.xml.plist.domain.PListObject remove(int) -> a
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    com.longevitysoft.android.xml.plist.domain.PListObject set(int,com.longevitysoft.android.xml.plist.domain.PListObject) -> b
    java.util.List subList(int,int) -> subList
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    void clear() -> clear
    java.lang.Object clone() -> clone
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    com.longevitysoft.android.xml.plist.domain.PListObject get(int) -> b
    int indexOf(java.lang.Object) -> indexOf
    java.util.Iterator iterator() -> iterator
    int size() -> size
    java.lang.Object get(int) -> get
    boolean add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object remove(int) -> remove
com.longevitysoft.android.xml.plist.domain.Data -> com.c.a.b.a.a.b:
    com.longevitysoft.android.util.Stringer dataStringer -> a
    byte[] rawData -> b
    void setValue(java.lang.String,boolean) -> a
com.longevitysoft.android.xml.plist.domain.Date -> com.c.a.b.a.a.c:
    java.util.Date date -> a
    java.text.SimpleDateFormat iso8601Format -> b
    void setValue(java.lang.String) -> a
com.longevitysoft.android.xml.plist.domain.Dict -> com.c.a.b.a.a.d:
    java.util.Map configMap -> a
    void putConfig(java.lang.String,com.longevitysoft.android.xml.plist.domain.PListObject) -> a
    java.util.Map getConfigMap() -> a
    com.longevitysoft.android.xml.plist.domain.PListObject getConfigurationObject(java.lang.String) -> a
    com.longevitysoft.android.xml.plist.domain.Array getConfigurationArray(java.lang.String) -> b
    java.lang.String toString() -> toString
com.longevitysoft.android.xml.plist.domain.False -> com.c.a.b.a.a.e:
com.longevitysoft.android.xml.plist.domain.Integer -> com.c.a.b.a.a.f:
    java.lang.Integer intgr -> a
    void setValue(java.lang.String) -> a
com.longevitysoft.android.xml.plist.domain.PList -> com.c.a.b.a.a.g:
    com.longevitysoft.android.util.Stringer stringer -> a
    com.longevitysoft.android.xml.plist.domain.PListObject root -> b
    boolean stackCtxInDict -> c
    boolean stackCtxInArray -> d
    int stackCtxNestedDepth -> e
    java.util.Stack stack -> f
    int[] $SWITCH_TABLE$com$longevitysoft$android$xml$plist$domain$PListObjectType -> g
    com.longevitysoft.android.xml.plist.domain.PListObject getRootElement() -> a
    void setRootElement(com.longevitysoft.android.xml.plist.domain.PListObject) -> a
    void attachPListObjToParent(com.longevitysoft.android.xml.plist.domain.PListObject,java.lang.String) -> b
    void attachPListObjToDictParent(com.longevitysoft.android.xml.plist.domain.PListObject,java.lang.String) -> c
    void attachPListObjToArrayParent(java.util.Stack,com.longevitysoft.android.xml.plist.domain.PListObject) -> a
    void stackObject(com.longevitysoft.android.xml.plist.domain.PListObject,java.lang.String) -> a
    com.longevitysoft.android.xml.plist.domain.PListObject popStack() -> b
    com.longevitysoft.android.xml.plist.domain.PListObject buildObject(java.lang.String,java.lang.String) -> a
    java.lang.String toString() -> toString
    int[] $SWITCH_TABLE$com$longevitysoft$android$xml$plist$domain$PListObjectType() -> c
com.longevitysoft.android.xml.plist.domain.PListObject -> com.c.a.b.a.a.h:
    com.longevitysoft.android.xml.plist.domain.PListObjectType type -> a
    com.longevitysoft.android.xml.plist.domain.PListObjectType getType() -> b
    void setType(com.longevitysoft.android.xml.plist.domain.PListObjectType) -> a
com.longevitysoft.android.xml.plist.domain.PListObjectType -> com.c.a.b.a.a.i:
    com.longevitysoft.android.xml.plist.domain.PListObjectType ARRAY -> a
    com.longevitysoft.android.xml.plist.domain.PListObjectType DATA -> b
    com.longevitysoft.android.xml.plist.domain.PListObjectType DATE -> c
    com.longevitysoft.android.xml.plist.domain.PListObjectType DICT -> d
    com.longevitysoft.android.xml.plist.domain.PListObjectType REAL -> e
    com.longevitysoft.android.xml.plist.domain.PListObjectType INTEGER -> f
    com.longevitysoft.android.xml.plist.domain.PListObjectType STRING -> g
    com.longevitysoft.android.xml.plist.domain.PListObjectType TRUE -> h
    com.longevitysoft.android.xml.plist.domain.PListObjectType FALSE -> i
    int type -> j
    com.longevitysoft.android.xml.plist.domain.PListObjectType[] ENUM$VALUES -> k
    com.longevitysoft.android.xml.plist.domain.PListObjectType[] values() -> values
    com.longevitysoft.android.xml.plist.domain.PListObjectType valueOf(java.lang.String) -> valueOf
com.longevitysoft.android.xml.plist.domain.Real -> com.c.a.b.a.a.j:
    java.lang.Float real -> a
    void setValue(java.lang.String) -> a
com.longevitysoft.android.xml.plist.domain.String -> com.c.a.b.a.a.k:
    com.longevitysoft.android.util.Stringer str -> a
    java.lang.String getValue() -> a
    void setValue(java.lang.String) -> a
com.longevitysoft.android.xml.plist.domain.True -> com.c.a.b.a.a.l:
com.radiusnetworks.ibeacon.BleNotAvailableException -> com.radiusnetworks.ibeacon.BleNotAvailableException:
    long serialVersionUID -> serialVersionUID
com.radiusnetworks.ibeacon.IBeacon -> com.radiusnetworks.ibeacon.IBeacon:
    int PROXIMITY_IMMEDIATE -> PROXIMITY_IMMEDIATE
    int PROXIMITY_NEAR -> PROXIMITY_NEAR
    int PROXIMITY_FAR -> PROXIMITY_FAR
    int PROXIMITY_UNKNOWN -> PROXIMITY_UNKNOWN
    char[] hexArray -> hexArray
    java.lang.String TAG -> TAG
    java.lang.String proximityUuid -> proximityUuid
    int major -> major
    int minor -> minor
    java.lang.Integer proximity -> proximity
    java.lang.Double accuracy -> accuracy
    int rssi -> rssi
    int txPower -> txPower
    java.lang.Double runningAverageRssi -> runningAverageRssi
    com.radiusnetworks.ibeacon.client.IBeaconDataFactory iBeaconDataFactory -> iBeaconDataFactory
    double getAccuracy() -> getAccuracy
    int getMajor() -> getMajor
    int getMinor() -> getMinor
    int getProximity() -> getProximity
    int getRssi() -> getRssi
    int getTxPower() -> getTxPower
    java.lang.String getProximityUuid() -> getProximityUuid
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.radiusnetworks.ibeacon.IBeacon fromScanData(byte[],int) -> fromScanData
    void requestData(com.radiusnetworks.ibeacon.IBeaconDataNotifier) -> requestData
    double calculateAccuracy(int,double) -> calculateAccuracy
    int calculateProximity(double) -> calculateProximity
    java.lang.String bytesToHex(byte[]) -> bytesToHex
com.radiusnetworks.ibeacon.IBeaconConsumer -> com.radiusnetworks.ibeacon.IBeaconConsumer:
    void onIBeaconServiceConnect() -> onIBeaconServiceConnect
    android.content.Context getApplicationContext() -> getApplicationContext
    void unbindService(android.content.ServiceConnection) -> unbindService
    boolean bindService(android.content.Intent,android.content.ServiceConnection,int) -> bindService
com.radiusnetworks.ibeacon.IBeaconData -> com.radiusnetworks.ibeacon.IBeaconData:
    java.lang.Double getLatitude() -> getLatitude
    void setLatitude(java.lang.Double) -> setLatitude
    void setLongitude(java.lang.Double) -> setLongitude
    java.lang.Double getLongitude() -> getLongitude
    java.lang.String get(java.lang.String) -> get
    void set(java.lang.String,java.lang.String) -> set
    void sync(com.radiusnetworks.ibeacon.IBeaconDataNotifier) -> sync
    boolean isDirty() -> isDirty
com.radiusnetworks.ibeacon.IBeaconDataNotifier -> com.radiusnetworks.ibeacon.IBeaconDataNotifier:
    void iBeaconDataUpdate(com.radiusnetworks.ibeacon.IBeacon,com.radiusnetworks.ibeacon.IBeaconData,com.radiusnetworks.ibeacon.client.DataProviderException) -> iBeaconDataUpdate
com.radiusnetworks.ibeacon.IBeaconIntentProcessor -> com.radiusnetworks.ibeacon.IBeaconIntentProcessor:
    java.lang.String TAG -> TAG
    boolean initialized -> initialized
    void onHandleIntent(android.content.Intent) -> onHandleIntent
com.radiusnetworks.ibeacon.IBeaconManager -> com.radiusnetworks.ibeacon.IBeaconManager:
    java.lang.String TAG -> TAG
    android.content.Context context -> context
    com.radiusnetworks.ibeacon.IBeaconManager client -> client
    java.util.Map consumers -> consumers
    android.os.Messenger serviceMessenger -> serviceMessenger
    com.radiusnetworks.ibeacon.RangeNotifier rangeNotifier -> rangeNotifier
    com.radiusnetworks.ibeacon.MonitorNotifier monitorNotifier -> monitorNotifier
    com.radiusnetworks.ibeacon.client.RangingTracker rangingTracker -> rangingTracker
    boolean LOG_DEBUG -> LOG_DEBUG
    long DEFAULT_FOREGROUND_SCAN_PERIOD -> DEFAULT_FOREGROUND_SCAN_PERIOD
    long DEFAULT_FOREGROUND_BETWEEN_SCAN_PERIOD -> DEFAULT_FOREGROUND_BETWEEN_SCAN_PERIOD
    long DEFAULT_BACKGROUND_SCAN_PERIOD -> DEFAULT_BACKGROUND_SCAN_PERIOD
    long DEFAULT_BACKGROUND_BETWEEN_SCAN_PERIOD -> DEFAULT_BACKGROUND_BETWEEN_SCAN_PERIOD
    long foregroundScanPeriod -> foregroundScanPeriod
    long foregroundBetweenScanPeriod -> foregroundBetweenScanPeriod
    long backgroundScanPeriod -> backgroundScanPeriod
    long backgroundBetweenScanPeriod -> backgroundBetweenScanPeriod
    android.content.ServiceConnection iBeaconServiceConnection -> iBeaconServiceConnection
    void setForegroundScanPeriod(long) -> setForegroundScanPeriod
    void setForegroundBetweenScanPeriod(long) -> setForegroundBetweenScanPeriod
    void setBackgroundScanPeriod(long) -> setBackgroundScanPeriod
    void setBackgroundBetweenScanPeriod(long) -> setBackgroundBetweenScanPeriod
    com.radiusnetworks.ibeacon.IBeaconManager getInstanceForApplication(android.content.Context) -> getInstanceForApplication
    boolean checkAvailability() -> checkAvailability
    void bind(com.radiusnetworks.ibeacon.IBeaconConsumer) -> bind
    void unBind(com.radiusnetworks.ibeacon.IBeaconConsumer) -> unBind
    boolean isBound(com.radiusnetworks.ibeacon.IBeaconConsumer) -> isBound
    boolean setBackgroundMode(com.radiusnetworks.ibeacon.IBeaconConsumer,boolean) -> setBackgroundMode
    void setRangeNotifier(com.radiusnetworks.ibeacon.RangeNotifier) -> setRangeNotifier
    void setMonitorNotifier(com.radiusnetworks.ibeacon.MonitorNotifier) -> setMonitorNotifier
    void startRangingBeaconsInRegion(com.radiusnetworks.ibeacon.Region) -> startRangingBeaconsInRegion
    void stopRangingBeaconsInRegion(com.radiusnetworks.ibeacon.Region) -> stopRangingBeaconsInRegion
    void startMonitoringBeaconsInRegion(com.radiusnetworks.ibeacon.Region) -> startMonitoringBeaconsInRegion
    void stopMonitoringBeaconsInRegion(com.radiusnetworks.ibeacon.Region) -> stopMonitoringBeaconsInRegion
    void setScanPeriods() -> setScanPeriods
    java.lang.String callbackPackageName() -> callbackPackageName
    com.radiusnetworks.ibeacon.MonitorNotifier getMonitoringNotifier() -> getMonitoringNotifier
    com.radiusnetworks.ibeacon.RangeNotifier getRangingNotifier() -> getRangingNotifier
    boolean isInBackground() -> isInBackground
    long getScanPeriod() -> getScanPeriod
    long getBetweenScanPeriod() -> getBetweenScanPeriod
    android.os.Messenger access$102(com.radiusnetworks.ibeacon.IBeaconManager,android.os.Messenger) -> access$102
    java.util.Map access$200(com.radiusnetworks.ibeacon.IBeaconManager) -> access$200
com.radiusnetworks.ibeacon.IBeaconManager$1 -> com.radiusnetworks.ibeacon.IBeaconManager$1:
    com.radiusnetworks.ibeacon.IBeaconManager this$0 -> this$0
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.radiusnetworks.ibeacon.IBeaconManager$ConsumerInfo -> com.radiusnetworks.ibeacon.IBeaconManager$ConsumerInfo:
    boolean isConnected -> isConnected
    boolean isInBackground -> isInBackground
    com.radiusnetworks.ibeacon.IBeaconManager this$0 -> this$0
com.radiusnetworks.ibeacon.MonitorNotifier -> com.radiusnetworks.ibeacon.MonitorNotifier:
    int INSIDE -> INSIDE
    int OUTSIDE -> OUTSIDE
    void didEnterRegion(com.radiusnetworks.ibeacon.Region) -> didEnterRegion
    void didExitRegion(com.radiusnetworks.ibeacon.Region) -> didExitRegion
    void didDetermineStateForRegion(int,com.radiusnetworks.ibeacon.Region) -> didDetermineStateForRegion
com.radiusnetworks.ibeacon.RangeNotifier -> com.radiusnetworks.ibeacon.RangeNotifier:
    void didRangeBeaconsInRegion(java.util.Collection,com.radiusnetworks.ibeacon.Region) -> didRangeBeaconsInRegion
com.radiusnetworks.ibeacon.Region -> com.radiusnetworks.ibeacon.Region:
    java.lang.String TAG -> TAG
    java.lang.Integer major -> major
    java.lang.Integer minor -> minor
    java.lang.String proximityUuid -> proximityUuid
    java.lang.String uniqueId -> uniqueId
    java.lang.Integer getMajor() -> getMajor
    java.lang.Integer getMinor() -> getMinor
    java.lang.String getProximityUuid() -> getProximityUuid
    java.lang.String getUniqueId() -> getUniqueId
    boolean matchesIBeacon(com.radiusnetworks.ibeacon.IBeacon) -> matchesIBeacon
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String normalizeProximityUuid(java.lang.String) -> normalizeProximityUuid
com.radiusnetworks.ibeacon.client.DataProviderException -> com.radiusnetworks.ibeacon.client.DataProviderException:
    long serialVersionUID -> serialVersionUID
com.radiusnetworks.ibeacon.client.IBeaconDataFactory -> com.radiusnetworks.ibeacon.client.IBeaconDataFactory:
    void requestIBeaconData(com.radiusnetworks.ibeacon.IBeacon,com.radiusnetworks.ibeacon.IBeaconDataNotifier) -> requestIBeaconData
com.radiusnetworks.ibeacon.client.NullIBeaconDataFactory -> com.radiusnetworks.ibeacon.client.NullIBeaconDataFactory:
    void requestIBeaconData(com.radiusnetworks.ibeacon.IBeacon,com.radiusnetworks.ibeacon.IBeaconDataNotifier) -> requestIBeaconData
com.radiusnetworks.ibeacon.client.NullIBeaconDataFactory$1 -> com.radiusnetworks.ibeacon.client.NullIBeaconDataFactory$1:
    com.radiusnetworks.ibeacon.IBeaconDataNotifier val$notifier -> val$notifier
    com.radiusnetworks.ibeacon.client.NullIBeaconDataFactory this$0 -> this$0
    void run() -> run
com.radiusnetworks.ibeacon.client.RangedIBeacon -> com.radiusnetworks.ibeacon.client.RangedIBeacon:
    java.lang.String TAG -> TAG
    long DEFAULT_SAMPLE_EXPIRATION_MILLISECONDS -> DEFAULT_SAMPLE_EXPIRATION_MILLISECONDS
    long sampleExpirationMilliseconds -> sampleExpirationMilliseconds
    java.util.ArrayList measurements -> measurements
    void setSampleExpirationMilliseconds(long) -> setSampleExpirationMilliseconds
    void addMeasurement(java.lang.Integer) -> addMeasurement
    boolean allMeasurementsExpired() -> allMeasurementsExpired
    void refreshMeasurements() -> refreshMeasurements
    double calculateRunningAverage() -> calculateRunningAverage
    void addRangeMeasurement(java.lang.Integer) -> addRangeMeasurement
com.radiusnetworks.ibeacon.client.RangedIBeacon$1 -> com.radiusnetworks.ibeacon.client.RangedIBeacon$1:
com.radiusnetworks.ibeacon.client.RangedIBeacon$Measurement -> com.radiusnetworks.ibeacon.client.RangedIBeacon$Measurement:
    java.lang.Integer rssi -> rssi
    long timestamp -> timestamp
    com.radiusnetworks.ibeacon.client.RangedIBeacon this$0 -> this$0
    int compareTo(com.radiusnetworks.ibeacon.client.RangedIBeacon$Measurement) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
com.radiusnetworks.ibeacon.client.RangingTracker -> com.radiusnetworks.ibeacon.client.RangingTracker:
    java.lang.String TAG -> TAG
    java.util.Map rangedIBeacons -> rangedIBeacons
    void addIBeacon(com.radiusnetworks.ibeacon.IBeacon) -> addIBeacon
    java.util.Collection getIBeacons() -> getIBeacons
com.radiusnetworks.ibeacon.service.Callback -> com.radiusnetworks.ibeacon.service.Callback:
    java.lang.String TAG -> TAG
    android.os.Messenger messenger -> messenger
    android.content.Intent intent -> intent
    android.content.Intent getIntent() -> getIntent
    void setIntent(android.content.Intent) -> setIntent
    boolean call(android.content.Context,java.lang.String,android.os.Parcelable) -> call
com.radiusnetworks.ibeacon.service.IBeaconData -> com.radiusnetworks.ibeacon.service.IBeaconData:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.Collection fromIBeacons(java.util.Collection) -> fromIBeacons
    java.util.Collection fromIBeaconDatas(java.util.Collection) -> fromIBeaconDatas
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.radiusnetworks.ibeacon.service.IBeaconData$1 -> com.radiusnetworks.ibeacon.service.IBeaconData$1:
    com.radiusnetworks.ibeacon.service.IBeaconData createFromParcel(android.os.Parcel) -> createFromParcel
    com.radiusnetworks.ibeacon.service.IBeaconData[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.radiusnetworks.ibeacon.service.IBeaconService -> com.radiusnetworks.ibeacon.service.IBeaconService:
    java.lang.String TAG -> TAG
    java.util.Map rangedRegionState -> rangedRegionState
    java.util.Map monitoredRegionState -> monitoredRegionState
    android.bluetooth.BluetoothAdapter bluetoothAdapter -> bluetoothAdapter
    boolean scanning -> scanning
    boolean scanningPaused -> scanningPaused
    java.util.Date lastIBeaconDetectionTime -> lastIBeaconDetectionTime
    java.util.HashSet trackedBeacons -> trackedBeacons
    android.os.Handler handler -> handler
    int bindCount -> bindCount
    long scanPeriod -> scanPeriod
    long betweenScanPeriod -> betweenScanPeriod
    java.util.List simulatedScanData -> simulatedScanData
    int MSG_START_RANGING -> MSG_START_RANGING
    int MSG_STOP_RANGING -> MSG_STOP_RANGING
    int MSG_START_MONITORING -> MSG_START_MONITORING
    int MSG_STOP_MONITORING -> MSG_STOP_MONITORING
    int MSG_SET_SCAN_PERIODS -> MSG_SET_SCAN_PERIODS
    android.os.Messenger mMessenger -> mMessenger
    int ongoing_notification_id -> ongoing_notification_id
    long lastScanStartTime -> lastScanStartTime
    long lastScanEndTime -> lastScanEndTime
    long nextScanStartTime -> nextScanStartTime
    long scanStopTime -> scanStopTime
    android.bluetooth.BluetoothAdapter$LeScanCallback leScanCallback -> leScanCallback
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    boolean isInBackground() -> isInBackground
    void startRangingBeaconsInRegion(com.radiusnetworks.ibeacon.Region,com.radiusnetworks.ibeacon.service.Callback) -> startRangingBeaconsInRegion
    void stopRangingBeaconsInRegion(com.radiusnetworks.ibeacon.Region) -> stopRangingBeaconsInRegion
    void startMonitoringBeaconsInRegion(com.radiusnetworks.ibeacon.Region,com.radiusnetworks.ibeacon.service.Callback) -> startMonitoringBeaconsInRegion
    void stopMonitoringBeaconsInRegion(com.radiusnetworks.ibeacon.Region) -> stopMonitoringBeaconsInRegion
    void setScanPeriods(long,long) -> setScanPeriods
    void scanLeDevice(java.lang.Boolean) -> scanLeDevice
    void scheduleScanStop() -> scheduleScanStop
    void finishScanCycle() -> finishScanCycle
    void processRangeData() -> processRangeData
    void processExpiredMonitors() -> processExpiredMonitors
    void processIBeaconFromScan(com.radiusnetworks.ibeacon.IBeacon) -> processIBeaconFromScan
    java.util.List matchingRegions(com.radiusnetworks.ibeacon.IBeacon,java.util.Collection) -> matchingRegions
    boolean anyRangingOrMonitoringRegionsActive() -> anyRangingOrMonitoringRegionsActive
    android.bluetooth.BluetoothAdapter getBluetoothAdapter() -> getBluetoothAdapter
    void access$000(com.radiusnetworks.ibeacon.service.IBeaconService,java.lang.Boolean) -> access$000
    void access$100(com.radiusnetworks.ibeacon.service.IBeaconService) -> access$100
    void access$300(com.radiusnetworks.ibeacon.service.IBeaconService,com.radiusnetworks.ibeacon.IBeacon) -> access$300
com.radiusnetworks.ibeacon.service.IBeaconService$1 -> com.radiusnetworks.ibeacon.service.IBeaconService$1:
    com.radiusnetworks.ibeacon.service.IBeaconService this$0 -> this$0
    void run() -> run
com.radiusnetworks.ibeacon.service.IBeaconService$2 -> com.radiusnetworks.ibeacon.service.IBeaconService$2:
    com.radiusnetworks.ibeacon.service.IBeaconService this$0 -> this$0
    void run() -> run
com.radiusnetworks.ibeacon.service.IBeaconService$3 -> com.radiusnetworks.ibeacon.service.IBeaconService$3:
    com.radiusnetworks.ibeacon.service.IBeaconService this$0 -> this$0
    void onLeScan(android.bluetooth.BluetoothDevice,int,byte[]) -> onLeScan
com.radiusnetworks.ibeacon.service.IBeaconService$IBeaconBinder -> com.radiusnetworks.ibeacon.service.IBeaconService$IBeaconBinder:
    com.radiusnetworks.ibeacon.service.IBeaconService this$0 -> this$0
    com.radiusnetworks.ibeacon.service.IBeaconService getService() -> getService
com.radiusnetworks.ibeacon.service.IBeaconService$IncomingHandler -> com.radiusnetworks.ibeacon.service.IBeaconService$IncomingHandler:
    java.lang.ref.WeakReference mService -> mService
    void handleMessage(android.os.Message) -> handleMessage
com.radiusnetworks.ibeacon.service.IBeaconService$ScanData -> com.radiusnetworks.ibeacon.service.IBeaconService$ScanData:
    android.bluetooth.BluetoothDevice device -> device
    int rssi -> rssi
    byte[] scanRecord -> scanRecord
    com.radiusnetworks.ibeacon.service.IBeaconService this$0 -> this$0
com.radiusnetworks.ibeacon.service.IBeaconService$ScanProcessor -> com.radiusnetworks.ibeacon.service.IBeaconService$ScanProcessor:
    com.radiusnetworks.ibeacon.service.IBeaconService this$0 -> this$0
    java.lang.Void doInBackground(com.radiusnetworks.ibeacon.service.IBeaconService$ScanData[]) -> doInBackground
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onPreExecute() -> onPreExecute
    void onProgressUpdate(java.lang.Void[]) -> onProgressUpdate
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.radiusnetworks.ibeacon.service.MonitorState -> com.radiusnetworks.ibeacon.service.MonitorState:
    java.lang.String TAG -> TAG
    long INSIDE_EXPIRATION_MILLIS -> INSIDE_EXPIRATION_MILLIS
    boolean inside -> inside
    long lastSeenTime -> lastSeenTime
    com.radiusnetworks.ibeacon.service.Callback callback -> callback
    com.radiusnetworks.ibeacon.service.Callback getCallback() -> getCallback
    boolean markInside() -> markInside
    boolean isNewlyOutside() -> isNewlyOutside
    boolean isInside() -> isInside
com.radiusnetworks.ibeacon.service.MonitoringData -> com.radiusnetworks.ibeacon.service.MonitoringData:
    java.lang.String TAG -> TAG
    boolean inside -> inside
    com.radiusnetworks.ibeacon.service.RegionData regionData -> regionData
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean isInside() -> isInside
    com.radiusnetworks.ibeacon.Region getRegion() -> getRegion
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.radiusnetworks.ibeacon.service.MonitoringData$1 -> com.radiusnetworks.ibeacon.service.MonitoringData$1:
    com.radiusnetworks.ibeacon.service.MonitoringData createFromParcel(android.os.Parcel) -> createFromParcel
    com.radiusnetworks.ibeacon.service.MonitoringData[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.radiusnetworks.ibeacon.service.RangeState -> com.radiusnetworks.ibeacon.service.RangeState:
    com.radiusnetworks.ibeacon.service.Callback callback -> callback
    java.util.Set iBeacons -> iBeacons
    com.radiusnetworks.ibeacon.service.Callback getCallback() -> getCallback
    void clearIBeacons() -> clearIBeacons
    java.util.Set getIBeacons() -> getIBeacons
    void addIBeacon(com.radiusnetworks.ibeacon.IBeacon) -> addIBeacon
com.radiusnetworks.ibeacon.service.RangingData -> com.radiusnetworks.ibeacon.service.RangingData:
    java.lang.String TAG -> TAG
    java.util.Collection iBeaconDatas -> iBeaconDatas
    com.radiusnetworks.ibeacon.service.RegionData regionData -> regionData
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.Collection getIBeacons() -> getIBeacons
    com.radiusnetworks.ibeacon.service.RegionData getRegion() -> getRegion
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.radiusnetworks.ibeacon.service.RangingData$1 -> com.radiusnetworks.ibeacon.service.RangingData$1:
    com.radiusnetworks.ibeacon.service.RangingData createFromParcel(android.os.Parcel) -> createFromParcel
    com.radiusnetworks.ibeacon.service.RangingData[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.radiusnetworks.ibeacon.service.RegionData -> com.radiusnetworks.ibeacon.service.RegionData:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.radiusnetworks.ibeacon.service.RegionData$1 -> com.radiusnetworks.ibeacon.service.RegionData$1:
    com.radiusnetworks.ibeacon.service.RegionData createFromParcel(android.os.Parcel) -> createFromParcel
    com.radiusnetworks.ibeacon.service.RegionData[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.radiusnetworks.ibeacon.service.StartRMData -> com.radiusnetworks.ibeacon.service.StartRMData:
    com.radiusnetworks.ibeacon.service.RegionData regionData -> regionData
    long scanPeriod -> scanPeriod
    long betweenScanPeriod -> betweenScanPeriod
    java.lang.String callbackPackageName -> callbackPackageName
    android.os.Parcelable$Creator CREATOR -> CREATOR
    long getScanPeriod() -> getScanPeriod
    long getBetweenScanPeriod() -> getBetweenScanPeriod
    com.radiusnetworks.ibeacon.service.RegionData getRegionData() -> getRegionData
    java.lang.String getCallbackPackageName() -> getCallbackPackageName
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.radiusnetworks.ibeacon.service.StartRMData$1 -> com.radiusnetworks.ibeacon.service.StartRMData$1:
    com.radiusnetworks.ibeacon.service.StartRMData createFromParcel(android.os.Parcel) -> createFromParcel
    com.radiusnetworks.ibeacon.service.StartRMData[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
lib.locate.KNN.IBeaconScanReceiver -> a.a.a.a:
    java.lang.String TAG -> c
    java.util.ArrayList scanDataList -> d
    java.util.ArrayList[] rssiGroup -> e
    java.util.ArrayList mApName -> a
    int[] mApScanRssi -> b
    int maxScanCount -> f
    int mScanCount -> g
    int FUNCTION_SITESURVEY -> h
    int FUNCTION_LOCATION -> i
    int mFunctioName -> j
    boolean bIsPointScanningDone -> k
    long preTime -> l
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void clearRssiArray() -> a
    void calculateMeanRssi() -> b
    void clearBeaconRssiArray() -> c
lib.locate.KNN.RssiMeanFilter -> a.a.a.b:
    int avg -> a
    int getMean() -> a
lib.locate.KNN.WifiFingerPrintReceiver -> a.a.a.c:
    map.navi.component.NavigationIndoorPosition indoorPosition -> a
    int mFunctioName -> b
    java.lang.String TAG -> c
    int FUNCTION_SITESURVEY -> d
    int FUNCTION_LOCATION -> e
    int FUNCTION_TESTING -> f
    java.util.ArrayList[] rssiGroup -> g
    java.util.ArrayList mApName -> h
    int[] mApScanRssi -> i
    double[] mApScanSD -> j
    int currentScanCount -> k
    int maxScanCount -> l
    int testingModeScanCount -> m
    float maxDistance3M -> n
    float maxDistance2M -> o
    int maxTestCount -> p
    java.util.ArrayList scanDataList -> q
    int[] onReceiveData -> r
    java.util.ArrayList aryPointXY -> s
    int outOfDistanceCount2M -> t
    int outOfDistanceCount3M -> u
    boolean bIsPointScanningDone -> v
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void clearRssiArray() -> a
    void calculateMeanRssi() -> b
lib.locate.KNN.WifiReferencePointDBHelper -> a.a.a.d:
    java.lang.String name -> a
    int dbVersion -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
lib.locate.KNN.WifiReferencePointProxy -> a.a.a.e:
    lib.locate.KNN.WifiReferencePointDBHelper dbHelper -> d
    android.database.sqlite.SQLiteDatabase db -> e
    android.content.Context ctx -> a
    java.lang.String TAG -> f
    java.lang.String[] column -> g
    java.util.ArrayList scanData -> h
    java.util.ArrayList regularDataList -> i
    java.lang.String nearestLine -> j
    android.database.Cursor fingerCursor -> k
    java.util.ArrayList list -> b
    java.util.ArrayList scanColumnName -> c
    int listColumnSize -> l
    java.lang.String nearestDevice -> m
    void initDB() -> a
    int queryIsNearestApExist(java.util.ArrayList) -> a
    java.lang.String getNearestDevice() -> b
    int calculateDistance(int[],int[]) -> a
    java.util.ArrayList queryReferencePointDis(java.util.ArrayList) -> b
lib.locate.KNN.WifiReferencePointProxy$1 -> a.a.a.f:
    lib.locate.KNN.WifiReferencePointProxy this$0 -> a
    int compare(java.util.HashMap,java.util.HashMap) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
lib.locate.KNN.WifiReferencePointVO -> a.a.a.g:
    java.lang.String DBName -> a
    int ApListSize -> b
    java.util.ArrayList aryApList -> c
    float lastPosX -> d
    float lastPosY -> e
    java.lang.String CREATE_TABLE -> f
lib.locate.algorithm.Math.MathProxy -> a.a.b.a.a:
    java.lang.String TAG -> a
    boolean xyIsBetweenStartAndEndNoEqu(float[],float[],float[]) -> a
    boolean xyIsBetweenStartAndEnd(float[],float[],float[]) -> b
    float getRotateFormStartToEnd(float[],float[]) -> a
    float[] getProjectionPoint(map.navi.Data.NaviNode,map.navi.Data.NaviNode,float,float) -> a
    lib.locate.algorithm.Math.component.Point convertNodeToPoint(map.navi.Data.NaviNode) -> a
    float[] convetPointTo1DArray(lib.locate.algorithm.Math.component.Point) -> a
    float getDistance(float,float,float[]) -> a
    float getDistance(float[],float[]) -> b
    float getDistance(float,float,float,float) -> a
    float getDistance(float[],map.navi.Data.NaviNode) -> a
    float getDistance(map.navi.Data.NaviNode,map.navi.Data.NaviNode) -> a
    float getLength(map.navi.Data.NaviNode,map.navi.Data.NaviNode,float,float) -> b
    float getLength(float,float,float,float,float,float) -> a
    void iBeaconSortingRssiStrongToWeak(java.util.ArrayList) -> a
lib.locate.algorithm.Math.component.LinearLine -> a.a.b.a.a.a:
    lib.locate.algorithm.Math.component.Point start -> a
    lib.locate.algorithm.Math.component.Point end -> b
    float a -> c
    float b -> d
    float lodret_a -> e
    float lodret_b -> f
    boolean lineIsVerticalX_axis() -> a
    boolean lineIsVerticalY_axis() -> b
    void calculateCoefficientAndConstance() -> c
    void calculateLodretLineCoefficientAndConstance(lib.locate.algorithm.Math.component.Point) -> e
    lib.locate.algorithm.Math.component.Point findProjectionPoint(lib.locate.algorithm.Math.component.Point) -> a
    boolean pointXCoordinateInLineArea(lib.locate.algorithm.Math.component.Point) -> b
    boolean pointYCoordinateInLineArea(lib.locate.algorithm.Math.component.Point) -> c
    lib.locate.algorithm.Math.component.Point findNearlyStartOrEndPoint(lib.locate.algorithm.Math.component.Point) -> d
    float distance(lib.locate.algorithm.Math.component.Point,lib.locate.algorithm.Math.component.Point) -> a
lib.locate.algorithm.Math.component.Point -> a.a.b.a.a.b:
    float x -> a
    float y -> b
map.navi.Data.BitmapLruCache -> map.navi.Data.a:
    int DEFAULT_CACHE_SIZE -> a
    android.graphics.Bitmap getBitmap(java.lang.String) -> a
    void putBitmap(java.lang.String,android.graphics.Bitmap) -> a
    boolean containBitmap(java.lang.String) -> b
map.navi.Data.LocationData -> map.navi.Data.b:
    java.lang.String locationTitle -> a
    java.lang.String locationNumber -> b
    java.lang.String locationArea -> c
    java.lang.String locationFloor -> d
    java.lang.String locationPosX -> e
    java.lang.String locationPosY -> f
    java.lang.String dataLog() -> a
    java.lang.String getLocationArea() -> b
    java.lang.String getLocationTitle() -> c
    java.lang.String getLocationNumber() -> d
    java.lang.String getLocationFloor() -> e
    java.lang.String getLocationPosX() -> f
    java.lang.String getLocationPosY() -> g
map.navi.Data.NaviNode -> map.navi.Data.NaviNode:
    float x -> a
    float y -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
map.navi.Data.NaviNode$1 -> map.navi.Data.c:
    map.navi.Data.NaviNode createFromParcel(android.os.Parcel) -> a
    map.navi.Data.NaviNode[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
map.navi.Data.NaviPlan -> map.navi.Data.d:
    com.doubleservice.bigcitynavigation.graph.BiGraph naviPlanGraph -> a
    android.app.Activity act -> b
    java.util.HashMap nodeCollection -> c
    java.util.ArrayList POICollection -> d
    java.util.HashMap plans -> e
    int planCount -> f
    int[] mapIDs -> g
    java.lang.String[] mapNames -> h
    java.lang.String[] pLists -> i
    java.lang.String[] areaNameInXML -> j
    java.lang.String[] floorName -> k
    java.lang.String toParkingPlaceBeacon -> l
    float currentMapPixelperMeter -> m
    float currentStandard_azimuth -> n
    float currentRoadDeviation -> o
    java.lang.String currentMapName -> p
    map.navi.Data.POI currentParkingElevator -> q
    java.util.HashMap MessageCollection -> r
    java.util.HashMap PositionCollection -> s
    android.os.Handler handler -> t
    int getMapIndexByName(java.lang.String) -> a
    void setPlan(int) -> a
    void cleanr() -> d
    void addPOITOGraph(java.lang.String,java.lang.String) -> a
    void b3_PLAN() -> a
    void BigCity_PLAN() -> b
    void SOGO_PLAN() -> c
    void loadPList2(java.lang.String,android.content.Context) -> a
    void addNodeToGraph(com.doubleservice.bigcitynavigation.graph.Node) -> a
    void addEdgeToGraph(com.doubleservice.bigcitynavigation.graph.Node,com.doubleservice.bigcitynavigation.graph.Node) -> a
map.navi.Data.POI -> map.navi.Data.POI:
    java.lang.String POIName -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
map.navi.Data.POI$1 -> map.navi.Data.e:
    map.navi.Data.POI createFromParcel(android.os.Parcel) -> a
    map.navi.Data.POI[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
map.navi.Data.PositionNode -> map.navi.Data.PositionNode:
map.navi.Data.PushMessageNode -> map.navi.Data.PushMessageNode:
map.navi.PathAlgorithmn.DijkstraAlgorithm -> map.navi.a.a:
    java.util.List nodes -> a
    java.util.List edges -> b
    java.util.Set settledNodes -> c
    java.util.Set unSettledNodes -> d
    java.util.Map predecessors -> e
    java.util.Map distance -> f
    void execute(com.doubleservice.bigcitynavigation.graph.Node) -> a
    void findMinimalDistances(com.doubleservice.bigcitynavigation.graph.Node) -> c
    int getDistance(com.doubleservice.bigcitynavigation.graph.Node,com.doubleservice.bigcitynavigation.graph.Node) -> a
    java.util.List getNeighbors(com.doubleservice.bigcitynavigation.graph.Node) -> d
    com.doubleservice.bigcitynavigation.graph.Node getMinimum(java.util.Set) -> a
    boolean isSettled(com.doubleservice.bigcitynavigation.graph.Node) -> e
    int getShortestDistance(com.doubleservice.bigcitynavigation.graph.Node) -> f
    java.util.LinkedList getPath(com.doubleservice.bigcitynavigation.graph.Node) -> b
map.navi.ViewComponent.NavigationPopupView -> map.navi.b.a:
    com.doubleservice.bigcitynavigation.Navigation navigation -> f
    android.widget.PopupWindow popUpWindow -> g
    android.widget.Button button_PlanNavigation -> h
    android.widget.Button button_StopNavigation -> i
    android.widget.Button button_NavigationTarget -> j
    android.widget.Button button_StartLocate -> k
    android.widget.Button button_name -> l
    android.widget.ImageView image -> m
    int viewNavigation -> a
    int viewFoodAndShop -> b
    int viewParking -> c
    int viewFriend -> d
    int currentMode -> n
    java.lang.String foodAndShopName -> o
    android.view.View$OnClickListener listener -> e
    void viewWithNavigation() -> c
    void viewWithFoodAndShop() -> d
    void viewWithFriend() -> e
    void viewWithParking() -> f
    void changePopView(int) -> a
    void setFreeAndShopTaegetName(java.lang.String) -> a
    void onPanelTouchAction() -> a
    void closeNavigationMode() -> b
    void changeToNavigationMode(java.lang.String) -> b
    void toPlanRoute() -> g
    com.doubleservice.bigcitynavigation.Navigation access$0(map.navi.ViewComponent.NavigationPopupView) -> a
    void access$1(map.navi.ViewComponent.NavigationPopupView) -> b
map.navi.ViewComponent.NavigationPopupView$1 -> map.navi.b.b:
    map.navi.ViewComponent.NavigationPopupView this$0 -> a
    void onClick(android.view.View) -> onClick
map.navi.component.NaviViewItem -> map.navi.component.a:
    java.lang.String TAG -> g
    android.content.Context context -> h
    float[] matrixValue -> i
    android.graphics.Matrix matrix -> a
    android.graphics.Bitmap bitmap -> b
    int imageHeightOrigin -> c
    int imageWidthOrigin -> d
    int imageHeight -> e
    int imageWidth -> f
    java.lang.String key -> j
    void setImage(int) -> setImage
    void setImage(android.graphics.Bitmap) -> setImage
    int getImageHeight() -> getImageHeight
    int getImageWidth() -> getImageWidth
    void setViewParameters(android.view.ViewGroup$LayoutParams) -> setViewParameters
    void updateImageMatrix() -> a
    void updateImageMatrix(android.graphics.Matrix) -> a
    void updateImageMatrix(float[]) -> a
    float[] getMatrixValue() -> getMatrixValue
map.navi.component.NavigationCalculator -> map.navi.component.b:
    map.navi.Data.NaviPlan plan -> a
    java.lang.String TAG -> b
    java.util.LinkedList getShortPathByStartXYAndEndXY(float,float,float,float) -> a
    void addNodeToGraph(com.doubleservice.bigcitynavigation.graph.BiGraph,map.navi.Data.NaviNode) -> a
    map.navi.Data.NaviNode getTempNodeToProjectLine(com.doubleservice.bigcitynavigation.graph.BiGraph,java.lang.String,float,float) -> a
    float[] findProjectionToLineInCurrentGraph(float,float) -> a
    float[] findProjectionWithExistRoute(java.util.LinkedList,float,float) -> a
    com.doubleservice.bigcitynavigation.graph.BiGraph cloneBiGraph(com.doubleservice.bigcitynavigation.graph.BiGraph) -> a
    void addEdgeToGraph(com.doubleservice.bigcitynavigation.graph.BiGraph,com.doubleservice.bigcitynavigation.graph.Node,com.doubleservice.bigcitynavigation.graph.Node) -> a
    float calculateDistanceOnLine(map.navi.Data.NaviPlan,float,float,float,float) -> a
    float calculatePathLength(java.util.LinkedList) -> a
    com.doubleservice.bigcitynavigation.graph.Node getNodeById(com.doubleservice.bigcitynavigation.graph.BiGraph,java.lang.String) -> a
    map.navi.Data.NaviNode[] getNearlyPathByXYOnNavigationRoute(java.util.LinkedList,float,float) -> b
    map.navi.Data.NaviNode[] getNearlyPathByXY(com.doubleservice.bigcitynavigation.graph.BiGraph,float,float,boolean) -> a
    com.doubleservice.bigcitynavigation.graph.Edge getNearlyPathIndexByXY(com.doubleservice.bigcitynavigation.graph.BiGraph,float,float,boolean) -> b
map.navi.component.NavigationIndoorPosition -> map.navi.component.c:
    com.doubleservice.bigcitynavigation.Navigation activity -> a
    java.lang.String TAG -> n
    java.util.Collection positionIbeacons -> o
    map.navi.Data.NaviPlan plan -> p
    android.net.wifi.WifiManager wiFiManager -> b
    lib.locate.KNN.WifiFingerPrintReceiver knnWifiReceiver -> c
    lib.locate.KNN.IBeaconScanReceiver knnBeaconReceiver -> d
    android.os.Handler wifiScanBackgroundHandler -> q
    android.os.Handler floorScanHandler -> r
    int backgroundScanTime -> s
    boolean isScanning -> e
    java.util.ArrayList passedKnnPosition -> f
    int passedPositionLimitTimes -> g
    android.app.ProgressDialog pd -> t
    int relocateSaveTimes -> u
    boolean isRelocate -> h
    boolean startScanning -> v
    boolean isWiFi -> i
    boolean hasNewLocate -> j
    boolean isAnalyze -> k
    boolean beaconStop -> l
    long preTime -> w
    boolean isLocateFault -> x
    boolean relocateSuccess -> y
    boolean isLocateNow -> z
    java.lang.Runnable beaconRelocateToPosition -> A
    android.os.Handler beaconHandlerRelocatePosition -> B
    boolean isRunScan -> C
    java.lang.Runnable ibeaconBackgroundGetPosition -> D
    android.os.Handler ibeaconBackgroundGetPositionHandler -> E
    boolean isRegisted -> m
    java.lang.Runnable wifiScanBackgroundRunner -> F
    java.lang.Runnable scanCurrentFloorBackgroundRunner -> G
    java.lang.Runnable scanAnalyze -> H
    java.lang.Runnable relocateToPosition -> I
    android.os.Handler handlerRelocatePosition -> J
    void changeMap(map.navi.Data.NaviPlan) -> a
    void beaconRelocateToPosition() -> a
    void startScan() -> b
    void stopScan() -> c
    boolean countLocatePosition(int) -> a
    float[] getNewLocateKNNPosition() -> d
    float[] getPositionByCounterTimes(int) -> b
    void broadcastIndoorPositionState(java.lang.String) -> a
    void access$0(map.navi.component.NavigationIndoorPosition,boolean) -> a
    java.lang.String access$1(map.navi.component.NavigationIndoorPosition) -> a
    boolean access$2(map.navi.component.NavigationIndoorPosition) -> b
    void access$3(map.navi.component.NavigationIndoorPosition,boolean) -> b
    android.os.Handler access$4(map.navi.component.NavigationIndoorPosition) -> c
    long access$5(map.navi.component.NavigationIndoorPosition) -> d
    android.app.ProgressDialog access$6(map.navi.component.NavigationIndoorPosition) -> e
    void access$7(map.navi.component.NavigationIndoorPosition,boolean) -> c
    boolean access$8(map.navi.component.NavigationIndoorPosition) -> f
    void access$9(map.navi.component.NavigationIndoorPosition,boolean) -> d
    android.os.Handler access$10(map.navi.component.NavigationIndoorPosition) -> g
    boolean access$11(map.navi.component.NavigationIndoorPosition) -> h
    android.os.Handler access$12(map.navi.component.NavigationIndoorPosition) -> i
    int access$13(map.navi.component.NavigationIndoorPosition) -> j
    android.os.Handler access$14(map.navi.component.NavigationIndoorPosition) -> k
    int access$15(map.navi.component.NavigationIndoorPosition) -> l
    android.os.Handler access$16(map.navi.component.NavigationIndoorPosition) -> m
    boolean access$17(map.navi.component.NavigationIndoorPosition) -> n
map.navi.component.NavigationIndoorPosition$1 -> map.navi.component.d:
    map.navi.component.NavigationIndoorPosition this$0 -> a
    void run() -> run
map.navi.component.NavigationIndoorPosition$2 -> map.navi.component.e:
    map.navi.component.NavigationIndoorPosition this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
map.navi.component.NavigationIndoorPosition$3 -> map.navi.component.f:
    map.navi.component.NavigationIndoorPosition this$0 -> a
    void run() -> run
map.navi.component.NavigationIndoorPosition$4 -> map.navi.component.g:
    map.navi.component.NavigationIndoorPosition this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
map.navi.component.NavigationIndoorPosition$5 -> map.navi.component.h:
    map.navi.component.NavigationIndoorPosition this$0 -> a
    void run() -> run
map.navi.component.NavigationIndoorPosition$6 -> map.navi.component.i:
    map.navi.component.NavigationIndoorPosition this$0 -> a
    void run() -> run
map.navi.component.NavigationIndoorPosition$7 -> map.navi.component.j:
    map.navi.component.NavigationIndoorPosition this$0 -> a
    void run() -> run
map.navi.component.NavigationIndoorPosition$8 -> map.navi.component.k:
    map.navi.component.NavigationIndoorPosition this$0 -> a
    void run() -> run
map.navi.component.NavigationIndoorPosition$9 -> map.navi.component.l:
    map.navi.component.NavigationIndoorPosition this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
map.navi.component.NavigationRouteSetting -> map.navi.component.NavigationRouteSetting:
    java.lang.String[] targetStart -> b
    java.lang.String[] targetEnd -> c
    int startSelect -> d
    int endSelect -> e
    int preStartSelect -> f
    int preEndSelect -> g
    android.widget.EditText editText_Start -> h
    android.widget.EditText editText_End -> i
    boolean isTouchStartEditText -> j
    android.widget.Button confirm -> k
    android.view.View$OnClickListener clickListener -> a
    void onCreate(android.os.Bundle) -> onCreate
    void backToNavigationActivity() -> a
    void listPOIDialog() -> b
    void access$0(map.navi.component.NavigationRouteSetting,boolean) -> a
    void access$1(map.navi.component.NavigationRouteSetting) -> a
    void access$2(map.navi.component.NavigationRouteSetting) -> b
    boolean access$3(map.navi.component.NavigationRouteSetting) -> c
    void access$4(map.navi.component.NavigationRouteSetting,int) -> a
    void access$5(map.navi.component.NavigationRouteSetting,int) -> b
    android.widget.EditText access$6(map.navi.component.NavigationRouteSetting) -> d
    java.lang.String[] access$7(map.navi.component.NavigationRouteSetting) -> e
    int access$8(map.navi.component.NavigationRouteSetting) -> f
    void access$9(map.navi.component.NavigationRouteSetting,int) -> c
    android.widget.EditText access$10(map.navi.component.NavigationRouteSetting) -> g
    java.lang.String[] access$11(map.navi.component.NavigationRouteSetting) -> h
    int access$12(map.navi.component.NavigationRouteSetting) -> i
    void access$13(map.navi.component.NavigationRouteSetting,int) -> d
    int access$14(map.navi.component.NavigationRouteSetting) -> j
    int access$15(map.navi.component.NavigationRouteSetting) -> k
map.navi.component.NavigationRouteSetting$1 -> map.navi.component.m:
    map.navi.component.NavigationRouteSetting this$0 -> a
    void onClick(android.view.View) -> onClick
map.navi.component.NavigationRouteSetting$2 -> map.navi.component.n:
    map.navi.component.NavigationRouteSetting this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
map.navi.component.NavigationRouteSetting$3 -> map.navi.component.o:
    map.navi.component.NavigationRouteSetting this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
map.navi.component.NavigationRouteSetting$4 -> map.navi.component.p:
    map.navi.component.NavigationRouteSetting this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
map.navi.component.NavigationSensor -> map.navi.component.q:
    android.app.Activity activity -> d
    java.lang.String TAG -> e
    android.hardware.SensorManager sensorMgr -> f
    float[] mGravity -> g
    float IS_MOVE_LIMIT -> h
    float IS_MOVE_VALUE -> i
    float IS_STAY -> j
    float azimuth -> a
    boolean isMove -> b
    float[] mOrientation -> c
    map.navi.component.StepCounter stepCounter -> k
    long preTime -> l
    java.lang.Runnable stepRunner -> m
    android.os.Handler handler -> n
    long time -> o
    float pre_Roll -> p
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    boolean phoneIntHandISRightDirection() -> a
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    android.os.Handler access$0(map.navi.component.NavigationSensor) -> a
    map.navi.component.StepCounter access$1(map.navi.component.NavigationSensor) -> b
    float[] access$2(map.navi.component.NavigationSensor) -> c
map.navi.component.NavigationSensor$1 -> map.navi.component.r:
    map.navi.component.NavigationSensor this$0 -> a
    void run() -> run
map.navi.component.NavigationSensor$2 -> map.navi.component.s:
    map.navi.component.NavigationSensor this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
map.navi.component.NavigationView -> map.navi.component.NavigationView:
    java.lang.String TAG -> o
    android.content.Context mContext -> p
    android.graphics.Matrix pre_matrix_map -> q
    android.graphics.Matrix pre_matrix_locatePoint -> r
    android.graphics.Matrix pre_matrix_route -> s
    android.graphics.Matrix pre_matrix_friend -> t
    android.graphics.Matrix pre_matrix_target -> u
    android.graphics.Matrix pre_matrix_navistart -> v
    android.graphics.Matrix locatePointMatrixOnLine -> w
    android.graphics.Matrix pre_locatePointMatrixOnLine -> x
    map.navi.component.NaviViewItem map -> a
    map.navi.component.NaviViewItem locatePoint -> b
    map.navi.component.NaviViewItem compass -> c
    map.navi.component.NaviViewItem route -> d
    map.navi.component.NaviViewItem friend -> e
    map.navi.component.NaviViewItem targetpoint -> f
    map.navi.component.NaviViewItem currentNaivStart -> g
    map.navi.component.NavigationCalculator naviCaculator -> y
    float azimuth -> h
    float standard_azimuth -> i
    float stepDistance -> z
    float stepConstant -> A
    float mapPixelPerMeter -> B
    float currentRoadDeviation -> C
    float minScaleR -> D
    float mapLoadScale -> E
    android.graphics.PointF preTouch -> F
    android.graphics.PointF mid -> j
    int mode -> k
    float zoomPointDist -> G
    android.util.DisplayMetrics dm -> H
    map.navi.component.drawLineHelper mDrawLine -> I
    int currentEdge -> J
    java.lang.String currentMapName -> l
    float lastAzimuth -> K
    float lastDegree -> L
    float compass_LastAzimuth -> M
    float compass_LastDegree -> N
    boolean isTouch -> m
    boolean isDrag -> O
    boolean isZoom -> P
    boolean fromTouchToNoTouch -> Q
    java.util.LinkedList currentNavigationRoute -> n
    boolean isOnePoint -> R
    boolean isTwoPoint -> S
    boolean isDraged -> T
    boolean hadTwoPoint -> U
    void setNavigationCalculator(map.navi.component.NavigationCalculator) -> setNavigationCalculator
    void setNavigationPic(int,int,int,int,int,int,float,float,float) -> a
    void cleanAllView() -> c
    void rotateCompass(float) -> a
    void rotateCurrentPoint() -> a
    void initMapNode() -> d
    float[] getMoveStepXY() -> getMoveStepXY
    float[] getNewPositionOnLineByRotateDirection(map.navi.Data.NaviNode,map.navi.Data.NaviNode,float) -> a
    float[] getCurrentMoveOnLineCoordinate() -> getCurrentMoveOnLineCoordinate
    void pointMovingWithoutPath() -> e
    void setLocatePointMatrixToLine() -> f
    float[] getLocatePointPixelOnMap() -> getLocatePointPixelOnMap
    void setLocatePointXY(float,float) -> a
    void setLocatePointXYToLine(float,float) -> b
    void setItemToLocation(map.navi.component.NaviViewItem,float,float) -> a
    void navToTargetFromCurrentPosition(float,float) -> c
    void navToTargetFromStartPOI(float,float,float,float) -> a
    float[] calculateItemPicCenter(map.navi.component.NaviViewItem) -> b
    float getMapRatio() -> getMapRatio
    float[] getItemPixelOnMap(map.navi.component.NaviViewItem) -> a
    float getItemWidthPixel(map.navi.component.NaviViewItem) -> c
    void drawPathByStartXYToEndXY(float,float,float,float) -> b
    void minZoom() -> g
    void initialImageView() -> h
    void setPicInitial() -> i
    void rotateItem(float,float) -> d
    void broadcastOnTouchOnePoint() -> j
    void broadcastOnTouch(boolean) -> a
    void saveCurrentMatrixValue() -> k
    void setPreMatrixValue() -> l
    void setMapGestureControll() -> m
    float convertPixelsToDp(float,android.content.Context) -> b
    float spacing(android.view.MotionEvent) -> b
    void midPoint(android.graphics.PointF,android.view.MotionEvent) -> a
    float getMovingDist(float,float) -> e
    float[] convertXYTOTrans(float,float) -> f
    float[] getLinePoint(float,float) -> g
    float[] getLinePointWithDeviation(float,float,float,float) -> c
    void pointCenter() -> b
    void access$0(map.navi.component.NavigationView) -> a
    android.graphics.PointF access$1(map.navi.component.NavigationView) -> b
    void access$2(map.navi.component.NavigationView,boolean) -> a
    void access$3(map.navi.component.NavigationView,boolean) -> b
    float access$4(android.view.MotionEvent) -> a
    void access$5(map.navi.component.NavigationView,float) -> a
    void access$6(map.navi.component.NavigationView,android.graphics.PointF,android.view.MotionEvent) -> a
    void access$7(map.navi.component.NavigationView,boolean) -> c
    void access$8(map.navi.component.NavigationView,boolean) -> d
    void access$9(map.navi.component.NavigationView,boolean) -> e
    void access$10(map.navi.component.NavigationView,boolean) -> f
    boolean access$11(map.navi.component.NavigationView) -> c
    boolean access$12(map.navi.component.NavigationView) -> d
    void access$13(map.navi.component.NavigationView) -> e
    void access$14(map.navi.component.NavigationView,boolean) -> g
    void access$15(map.navi.component.NavigationView,boolean) -> h
    boolean access$16(map.navi.component.NavigationView) -> f
    boolean access$17(map.navi.component.NavigationView) -> g
    void access$18(map.navi.component.NavigationView) -> h
    float access$19(map.navi.component.NavigationView) -> i
    android.graphics.Matrix access$20(map.navi.component.NavigationView) -> j
    float access$21(map.navi.component.NavigationView,map.navi.component.NaviViewItem) -> a
    android.content.Context access$22(map.navi.component.NavigationView) -> k
    float access$23(float,android.content.Context) -> a
    boolean access$24(map.navi.component.NavigationView) -> l
    float access$25(map.navi.component.NavigationView,float,float) -> a
    boolean access$26(map.navi.component.NavigationView) -> m
map.navi.component.NavigationView$1 -> map.navi.component.t:
    map.navi.component.NavigationView this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
map.navi.component.PushMessageManager -> map.navi.component.u:
    android.app.Activity activity -> a
    android.app.AlertDialog dmAlert -> b
    boolean dmDialogIsOpen -> c
    java.util.HashMap messageCollection -> d
    java.lang.String TAG -> e
    java.io.File docFolder -> f
map.navi.component.StepCounter -> map.navi.component.v:
    android.app.Activity activity -> b
    java.lang.String TAG -> c
    boolean showDialog -> d
    float preY -> e
    float preZ -> f
    boolean initial -> g
    float highThreshold -> h
    float lowThreshold -> i
    float y_highThreshold -> j
    float y_lowThreshold -> k
    float z_highThreshold -> l
    float z_lowThreshold -> m
    float[] value -> a
    boolean isOver -> n
    boolean countAccelationSquareRoot -> o
    boolean isThreadOpen -> p
    float accelationSquareRoot -> q
    int noShakeCounter -> r
    float preAccelationSquareRoot -> s
    float[] gravity -> t
    float[] linear_acceleration -> u
    long time -> v
    float pre_Roll -> w
    java.lang.Runnable mThreadtouchPanel -> x
    android.os.Handler handler -> y
    java.util.ArrayList passedAccelation -> z
    int passedSize -> A
    float average -> B
    float HeightLimit -> C
    float HeightestLimit -> D
    float LowLimit -> E
    boolean preHeight -> F
    float preHeightCounter -> G
    float preHeightCounterLimit -> H
    float passedHeight -> I
    boolean isShake -> J
    float dynamicHightLimit -> K
    java.util.ArrayList passedHightLimit -> L
    float maxAverage -> M
    boolean isInDetectPreiod -> N
    boolean isDetectComplete -> O
    android.os.Handler mShakeHandler -> P
    java.lang.Runnable mThreadShake -> Q
    boolean detectStep(float[]) -> a
    float[] filter(float[]) -> b
    android.os.Handler access$0(map.navi.component.StepCounter) -> a
    void access$1(map.navi.component.StepCounter,boolean) -> a
    void access$2(map.navi.component.StepCounter,boolean) -> b
    boolean access$3(map.navi.component.StepCounter) -> b
    float access$4(map.navi.component.StepCounter) -> c
    int access$5(map.navi.component.StepCounter) -> d
    void access$6(map.navi.component.StepCounter,int) -> a
    void access$7(map.navi.component.StepCounter,boolean) -> c
    void access$8(map.navi.component.StepCounter,boolean) -> d
    boolean access$9(map.navi.component.StepCounter) -> e
    android.os.Handler access$10(map.navi.component.StepCounter) -> f
    java.lang.Runnable access$11(map.navi.component.StepCounter) -> g
    void access$12(map.navi.component.StepCounter,boolean) -> e
map.navi.component.StepCounter$1 -> map.navi.component.w:
    map.navi.component.StepCounter this$0 -> a
    void run() -> run
map.navi.component.StepCounter$2 -> map.navi.component.x:
    map.navi.component.StepCounter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
map.navi.component.StepCounter$3 -> map.navi.component.y:
    map.navi.component.StepCounter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
map.navi.component.StepCounter$4 -> map.navi.component.z:
    map.navi.component.StepCounter this$0 -> a
    void run() -> run
map.navi.component.drawLineHelper -> map.navi.component.aa:
    android.graphics.Paint paint -> a
    android.graphics.Canvas canv -> b
    android.graphics.Bitmap mBitmap -> c
    int width -> d
    int height -> e
    void onDraw(android.graphics.Canvas) -> onDraw
    void clean() -> a
    android.graphics.Bitmap drawPath(java.util.ArrayList,java.util.ArrayList) -> a
net.sf.migbase64.Base64 -> b.a.a.a:
    char[] CA -> a
    int[] IA -> b
    byte[] encodeToByte(byte[],boolean) -> a
